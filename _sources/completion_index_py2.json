{
    "BaseHTTPServer": [
        [ "BaseHTTPRequestHandler", "class" ],
        [ "HTTPServer", "class" ]
    ],
    "Bastion": [
        [ "Bastion()", "function" ],
        [ "BastionClass", "class" ]
    ],
    "CGIHTTPServer": [
        [ "CGIHTTPRequestHandler", "class" ]
    ],
    "ConfigParser": [
        [ "ConfigParser", "class" ],
        [ "DuplicateSectionError", "exception" ],
        [ "Error", "exception" ],
        [ "InterpolationDepthError", "exception" ],
        [ "InterpolationError", "exception" ],
        [ "InterpolationMissingOptionError", "exception" ],
        [ "InterpolationSyntaxError", "exception" ],
        [ "MAX_INTERPOLATION_DEPTH", "data" ],
        [ "MissingSectionHeaderError", "exception" ],
        [ "NoOptionError", "exception" ],
        [ "NoSectionError", "exception" ],
        [ "ParsingError", "exception" ],
        [ "RawConfigParser", "class" ],
        [ "SafeConfigParser", "class" ]
    ],
    "Cookie": [
        [ "BaseCookie", "class" ],
        [ "CookieError", "exception" ],
        [ "Morsel", "class" ],
        [ "SerialCookie", "class" ],
        [ "SimpleCookie", "class" ],
        [ "SmartCookie", "class" ]
    ],
    "DocXMLRPCServer": [
        [ "DocCGIXMLRPCRequestHandler", "class" ],
        [ "DocXMLRPCRequestHandler", "class" ],
        [ "DocXMLRPCServer", "class" ]
    ],
    "HTMLParser": [
        [ "HTMLParseError", "exception" ],
        [ "HTMLParser", "class" ]
    ],
    "Image": [
        [ "blend()", "function" ],
        [ "composite()", "function" ],
        [ "eval()", "function" ],
        [ "frombuffer()", "function" ],
        [ "fromstring()", "function" ],
        [ "merge()", "function" ],
        [ "new()", "function" ],
        [ "open()", "function" ]
    ],
    "ImageChops": [
        [ "add()", "function" ],
        [ "blend()", "function" ],
        [ "composite()", "function" ],
        [ "constant()", "function" ],
        [ "darker()", "function" ],
        [ "difference()", "function" ],
        [ "duplicate()", "function" ],
        [ "invert()", "function" ],
        [ "lighter()", "function" ],
        [ "multiply()", "function" ],
        [ "offset()", "function" ],
        [ "screen()", "function" ],
        [ "subtract()", "function" ]
    ],
    "ImageColor": [
        [ "getcolor()", "function" ],
        [ "getrgb()", "function" ]
    ],
    "ImageDraw": [
        [ "Draw()", "function" ]
    ],
    "ImageEnhance": [
        [ "Brightness", "class" ],
        [ "Color", "class" ],
        [ "Contrast", "class" ],
        [ "Sharpness", "class" ]
    ],
    "ImageFile": [
        [ "Parser()", "function" ]
    ],
    "ImageFilter": [
        [ "Kernel()", "function" ],
        [ "MaxFilter()", "function" ],
        [ "MedianFilter()", "function" ],
        [ "MinFilter()", "function" ],
        [ "ModeFilter()", "function" ],
        [ "RankFilter()", "function" ]
    ],
    "ImageFont": [
        [ "load()", "function" ],
        [ "load_default()", "function" ],
        [ "load_path()", "function" ],
        [ "truetype()", "function" ]
    ],
    "ImageMath": [
        [ "eval()", "function" ]
    ],
    "ImageOps": [
        [ "autocontrast()", "function" ],
        [ "colorize()", "function" ],
        [ "crop()", "function" ],
        [ "deform()", "function" ],
        [ "equalize()", "function" ],
        [ "expand()", "function" ],
        [ "fit()", "function" ],
        [ "flip()", "function" ],
        [ "grayscale()", "function" ],
        [ "invert()", "function" ],
        [ "mirror()", "function" ],
        [ "posterize()", "function" ],
        [ "solarize()", "function" ]
    ],
    "ImagePath": [
        [ "Path()", "function" ]
    ],
    "MimeWriter": [
        [ "MimeWriter", "class" ]
    ],
    "Queue": [
        [ "Empty", "exception" ],
        [ "Full", "exception" ],
        [ "LifoQueue", "class" ],
        [ "PriorityQueue", "class" ],
        [ "Queue", "class" ]
    ],
    "SimpleHTTPServer": [
        [ "SimpleHTTPRequestHandler", "class" ]
    ],
    "SimpleXMLRPCServer": [
        [ "CGIXMLRPCRequestHandler", "class" ],
        [ "SimpleXMLRPCRequestHandler", "class" ],
        [ "SimpleXMLRPCServer", "class" ]
    ],
    "SocketServer": [
        [ "BaseServer", "class" ]
    ],
    "StringIO": [
        [ "StringIO", "class" ]
    ],
    "UserDict": [
        [ "DictMixin", "class" ],
        [ "IterableUserDict", "class" ],
        [ "UserDict", "class" ]
    ],
    "UserList": [
        [ "UserList", "class" ]
    ],
    "UserString": [
        [ "MutableString", "class" ],
        [ "UserString", "class" ]
    ],
    "abc": [
        [ "ABCMeta", "class" ],
        [ "abstractmethod()", "function" ],
        [ "abstractproperty()", "function" ]
    ],
    "aifc": [
        [ "open()", "function" ]
    ],
    "anydbm": [
        [ "error", "exception" ],
        [ "open()", "function" ]
    ],
    "appex": [
        [ "get_attachments()", "function" ],
        [ "get_file_path()", "function" ],
        [ "get_file_paths()", "function" ],
        [ "get_image()", "function" ],
        [ "get_image_data()", "function" ],
        [ "get_images()", "function" ],
        [ "get_images_data()", "function" ],
        [ "get_text()", "function" ],
        [ "get_url()", "function" ],
        [ "get_urls()", "function" ],
        [ "get_vcards()", "function" ],
        [ "is_running_extension()", "function" ]
    ],
    "argparse": [
        [ "ArgumentDefaultsHelpFormatter", "class" ],
        [ "ArgumentParser", "class" ],
        [ "FileType", "class" ],
        [ "Namespace", "class" ],
        [ "RawDescriptionHelpFormatter", "class" ],
        [ "RawTextHelpFormatter", "class" ],
        [ "add_mutually_exclusive_group", "method" ]
    ],
    "array": [
        [ "ArrayType", "data" ],
        [ "array", "class" ]
    ],
    "ast": [
        [ "AST", "class" ],
        [ "NodeTransformer", "class" ],
        [ "NodeVisitor", "class" ],
        [ "copy_location()", "function" ],
        [ "dump()", "function" ],
        [ "fix_missing_locations()", "function" ],
        [ "get_docstring()", "function" ],
        [ "increment_lineno()", "function" ],
        [ "iter_child_nodes()", "function" ],
        [ "iter_fields()", "function" ],
        [ "literal_eval()", "function" ],
        [ "parse()", "function" ],
        [ "walk()", "function" ]
    ],
    "asynchat": [
        [ "async_chat", "class" ],
        [ "fifo", "class" ]
    ],
    "asyncore": [
        [ "dispatcher", "class" ],
        [ "dispatcher_with_send", "class" ],
        [ "file_dispatcher", "class" ],
        [ "file_wrapper", "class" ],
        [ "loop()", "function" ]
    ],
    "atexit": [
        [ "register()", "function" ]
    ],
    "base64": [
        [ "b16decode()", "function" ],
        [ "b16encode()", "function" ],
        [ "b32decode()", "function" ],
        [ "b32encode()", "function" ],
        [ "b64decode()", "function" ],
        [ "b64encode()", "function" ],
        [ "decode()", "function" ],
        [ "decodestring()", "function" ],
        [ "encode()", "function" ],
        [ "encodestring()", "function" ],
        [ "standard_b64decode()", "function" ],
        [ "standard_b64encode()", "function" ],
        [ "urlsafe_b64decode()", "function" ],
        [ "urlsafe_b64encode()", "function" ]
    ],
    "bdb": [
        [ "Bdb", "class" ],
        [ "BdbQuit", "exception" ],
        [ "Breakpoint", "class" ],
        [ "checkfuncname()", "function" ],
        [ "effective()", "function" ],
        [ "set_trace()", "function" ]
    ],
    "binascii": [
        [ "Error", "exception" ],
        [ "Incomplete", "exception" ],
        [ "a2b_base64()", "function" ],
        [ "a2b_hex()", "function" ],
        [ "a2b_hqx()", "function" ],
        [ "a2b_qp()", "function" ],
        [ "a2b_uu()", "function" ],
        [ "b2a_base64()", "function" ],
        [ "b2a_hex()", "function" ],
        [ "b2a_hqx()", "function" ],
        [ "b2a_qp()", "function" ],
        [ "b2a_uu()", "function" ],
        [ "crc32()", "function" ],
        [ "crc_hqx()", "function" ],
        [ "hexlify()", "function" ],
        [ "rlecode_hqx()", "function" ],
        [ "rledecode_hqx()", "function" ],
        [ "unhexlify()", "function" ]
    ],
    "binhex": [
        [ "Error", "exception" ],
        [ "binhex()", "function" ],
        [ "hexbin()", "function" ]
    ],
    "bisect": [
        [ "bisect()", "function" ],
        [ "bisect_left()", "function" ],
        [ "bisect_right()", "function" ],
        [ "insort()", "function" ],
        [ "insort_left()", "function" ],
        [ "insort_right()", "function" ]
    ],
    "bottle": [
        [ "AppStack", "class" ],
        [ "BaseRequest", "class" ],
        [ "BaseResponse", "class" ],
        [ "BaseTemplate", "class" ],
        [ "Bottle", "class" ],
        [ "BottleException", "exception" ],
        [ "ConfigDict", "class" ],
        [ "FormsDict", "class" ],
        [ "HTTPError", "exception" ],
        [ "HTTPResponse", "exception" ],
        [ "HTTP_CODES", "data" ],
        [ "HeaderDict", "class" ],
        [ "LocalRequest", "class" ],
        [ "LocalResponse", "class" ],
        [ "MultiDict", "class" ],
        [ "Plugin", "class" ],
        [ "Request", "attribute" ],
        [ "ResourceManager", "class" ],
        [ "Response", "attribute" ],
        [ "Route", "class" ],
        [ "SimpleTemplate", "class" ],
        [ "WSGIHeaderDict", "class" ],
        [ "app()", "function" ],
        [ "cookie_decode()", "function" ],
        [ "cookie_encode()", "function" ],
        [ "cookie_is_encoded()", "function" ],
        [ "debug()", "function" ],
        [ "default_app()", "function" ],
        [ "delete()", "function" ],
        [ "error()", "function" ],
        [ "get()", "function" ],
        [ "load()", "function" ],
        [ "load_app()", "function" ],
        [ "parse_auth()", "function" ],
        [ "parse_date()", "function" ],
        [ "path_shift()", "function" ],
        [ "post()", "function" ],
        [ "put()", "function" ],
        [ "request", "data" ],
        [ "response", "data" ],
        [ "route()", "function" ],
        [ "run()", "function" ],
        [ "template()", "function" ],
        [ "view()", "function" ],
        [ "yieldroutes()", "function" ]
    ],
    "bs4": [
        [ "BeautifulSoup", "class" ],
        [ "PageElement", "class" ],
        [ "Tag", "class" ]
    ],
    "bz2": [
        [ "BZ2Compressor", "class" ],
        [ "BZ2Decompressor", "class" ],
        [ "BZ2File", "class" ],
        [ "compress()", "function" ],
        [ "decompress()", "function" ]
    ],
    "cProfile": [
        [ "run()", "function" ],
        [ "runctx()", "function" ]
    ],
    "cStringIO": [
        [ "InputType", "data" ],
        [ "OutputType", "data" ],
        [ "StringIO()", "function" ]
    ],
    "calendar": [
        [ "Calendar", "class" ],
        [ "HTMLCalendar", "class" ],
        [ "LocaleHTMLCalendar", "class" ],
        [ "LocaleTextCalendar", "class" ],
        [ "TextCalendar", "class" ],
        [ "calendar()", "function" ],
        [ "day_abbr", "data" ],
        [ "day_name", "data" ],
        [ "firstweekday()", "function" ],
        [ "isleap()", "function" ],
        [ "leapdays()", "function" ],
        [ "month()", "function" ],
        [ "month_abbr", "data" ],
        [ "month_name", "data" ],
        [ "monthcalendar()", "function" ],
        [ "monthrange()", "function" ],
        [ "prcal()", "function" ],
        [ "prmonth()", "function" ],
        [ "setfirstweekday()", "function" ],
        [ "timegm()", "function" ],
        [ "weekday()", "function" ],
        [ "weekheader()", "function" ]
    ],
    "canvas": [
        [ "BLEND_CLEAR", "data" ],
        [ "BLEND_COLOR", "data" ],
        [ "BLEND_COLOR_BURN", "data" ],
        [ "BLEND_COLOR_DODGE", "data" ],
        [ "BLEND_COPY", "data" ],
        [ "BLEND_DARKEN", "data" ],
        [ "BLEND_DESTINATION_ATOP", "data" ],
        [ "BLEND_DESTINATION_OVER", "data" ],
        [ "BLEND_DIFFERENCE", "data" ],
        [ "BLEND_EXCLUSION", "data" ],
        [ "BLEND_HARD_LIGHT", "data" ],
        [ "BLEND_HUE", "data" ],
        [ "BLEND_LIGHTEN", "data" ],
        [ "BLEND_LUMINOSITY", "data" ],
        [ "BLEND_MULTIPLY", "data" ],
        [ "BLEND_NORMAL", "data" ],
        [ "BLEND_OVERLAY", "data" ],
        [ "BLEND_PLUS_DARKER", "data" ],
        [ "BLEND_PLUS_LIGHTER", "data" ],
        [ "BLEND_SATURATION", "data" ],
        [ "BLEND_SCREEN", "data" ],
        [ "BLEND_SOFT_LIGHT", "data" ],
        [ "BLEND_SOURCE_ATOP", "data" ],
        [ "BLEND_SOURCE_IN", "data" ],
        [ "BLEND_SOURCE_OUT", "data" ],
        [ "BLEND_XOR", "data" ],
        [ "add_curve()", "function" ],
        [ "add_ellipse()", "function" ],
        [ "add_line()", "function" ],
        [ "add_quad_curve()", "function" ],
        [ "add_rect()", "function" ],
        [ "begin_path()", "function" ],
        [ "begin_updates()", "function" ],
        [ "clear()", "function" ],
        [ "clip()", "function" ],
        [ "close_path()", "function" ],
        [ "draw_clipboard()", "function" ],
        [ "draw_ellipse()", "function" ],
        [ "draw_image()", "function" ],
        [ "draw_line()", "function" ],
        [ "draw_path()", "function" ],
        [ "draw_rect()", "function" ],
        [ "draw_text()", "function" ],
        [ "end_updates()", "function" ],
        [ "fill_ellipse()", "function" ],
        [ "fill_path()", "function" ],
        [ "fill_pixel()", "function" ],
        [ "fill_rect()", "function" ],
        [ "get_clipboard_size()", "function" ],
        [ "get_image_size()", "function" ],
        [ "get_size()", "function" ],
        [ "get_text_size()", "function" ],
        [ "move_to()", "function" ],
        [ "restore_gstate()", "function" ],
        [ "rotate()", "function" ],
        [ "save_gstate()", "function" ],
        [ "scale()", "function" ],
        [ "set_aa_enabled()", "function" ],
        [ "set_alpha()", "function" ],
        [ "set_blend_mode()", "function" ],
        [ "set_fill_color()", "function" ],
        [ "set_line_width()", "function" ],
        [ "set_size()", "function" ],
        [ "set_stroke_color()", "function" ],
        [ "translate()", "function" ]
    ],
    "cb": [
        [ "CH_PROP_AUTHENTICATED_SIGNED_WRITES", "data" ],
        [ "CH_PROP_BROADCAST", "data" ],
        [ "CH_PROP_EXTENDED_PROPERTIES", "data" ],
        [ "CH_PROP_INDICATE", "data" ],
        [ "CH_PROP_INDICATE_ENCRYPTION_REQUIRED", "data" ],
        [ "CH_PROP_NOTIFY", "data" ],
        [ "CH_PROP_NOTIFY_ENCRYPTION_REQUIRED", "data" ],
        [ "CH_PROP_READ", "data" ],
        [ "CH_PROP_WRITE", "data" ],
        [ "CH_PROP_WRITE_WITHOUT_RESPONSE", "data" ],
        [ "CM_STATE_POWERED_OFF", "data" ],
        [ "CM_STATE_POWERED_ON", "data" ],
        [ "CM_STATE_RESETTING", "data" ],
        [ "CM_STATE_UNAUTHORIZED", "data" ],
        [ "CM_STATE_UNKNOWN", "data" ],
        [ "CM_STATE_UNSUPPORTED", "data" ],
        [ "Characteristic", "class" ],
        [ "Peripheral", "class" ],
        [ "Service", "class" ],
        [ "cancel_peripheral_connection()", "function" ],
        [ "connect_peripheral()", "function" ],
        [ "get_state()", "function" ],
        [ "reset()", "function" ],
        [ "scan_for_peripherals()", "function" ],
        [ "set_central_delegate()", "function" ],
        [ "set_verbose()", "function" ],
        [ "stop_scan()", "function" ]
    ],
    "cgi": [
        [ "escape()", "function" ],
        [ "parse()", "function" ],
        [ "parse_header()", "function" ],
        [ "parse_multipart()", "function" ],
        [ "parse_qs()", "function" ],
        [ "parse_qsl()", "function" ],
        [ "print_directory()", "function" ],
        [ "print_environ()", "function" ],
        [ "print_environ_usage()", "function" ],
        [ "print_form()", "function" ],
        [ "test()", "function" ]
    ],
    "cgitb": [
        [ "enable()", "function" ],
        [ "handler()", "function" ]
    ],
    "chunk": [
        [ "Chunk", "class" ]
    ],
    "class": [
        [ "__bases__", "attribute" ],
        [ "__instancecheck__", "method" ],
        [ "__mro__", "attribute" ],
        [ "__name__", "attribute" ],
        [ "__subclasscheck__", "method" ],
        [ "__subclasses__", "method" ],
        [ "mro", "method" ]
    ],
    "clipboard": [
        [ "get()", "function" ],
        [ "get_image()", "function" ],
        [ "set()", "function" ],
        [ "set_image()", "function" ]
    ],
    "cmath": [
        [ "acos()", "function" ],
        [ "acosh()", "function" ],
        [ "asin()", "function" ],
        [ "asinh()", "function" ],
        [ "atan()", "function" ],
        [ "atanh()", "function" ],
        [ "cos()", "function" ],
        [ "cosh()", "function" ],
        [ "e", "data" ],
        [ "exp()", "function" ],
        [ "isinf()", "function" ],
        [ "isnan()", "function" ],
        [ "log()", "function" ],
        [ "log10()", "function" ],
        [ "phase()", "function" ],
        [ "pi", "data" ],
        [ "polar()", "function" ],
        [ "rect()", "function" ],
        [ "sin()", "function" ],
        [ "sinh()", "function" ],
        [ "sqrt()", "function" ],
        [ "tan()", "function" ],
        [ "tanh()", "function" ]
    ],
    "cmd": [
        [ "Cmd", "class" ]
    ],
    "code": [
        [ "InteractiveConsole", "class" ],
        [ "InteractiveInterpreter", "class" ],
        [ "compile_command()", "function" ],
        [ "interact()", "function" ]
    ],
    "codecs": [
        [ "BOM", "data" ],
        [ "BOM_BE", "data" ],
        [ "BOM_LE", "data" ],
        [ "BOM_UTF16", "data" ],
        [ "BOM_UTF16_BE", "data" ],
        [ "BOM_UTF16_LE", "data" ],
        [ "BOM_UTF32", "data" ],
        [ "BOM_UTF32_BE", "data" ],
        [ "BOM_UTF32_LE", "data" ],
        [ "BOM_UTF8", "data" ],
        [ "EncodedFile()", "function" ],
        [ "IncrementalDecoder", "class" ],
        [ "IncrementalEncoder", "class" ],
        [ "StreamReader", "class" ],
        [ "StreamReaderWriter", "class" ],
        [ "StreamRecoder", "class" ],
        [ "StreamWriter", "class" ],
        [ "backslashreplace_errors()", "function" ],
        [ "getdecoder()", "function" ],
        [ "getencoder()", "function" ],
        [ "getincrementaldecoder()", "function" ],
        [ "getincrementalencoder()", "function" ],
        [ "getreader()", "function" ],
        [ "getwriter()", "function" ],
        [ "ignore_errors()", "function" ],
        [ "iterdecode()", "function" ],
        [ "iterencode()", "function" ],
        [ "lookup()", "function" ],
        [ "lookup_error()", "function" ],
        [ "open()", "function" ],
        [ "register()", "function" ],
        [ "register_error()", "function" ],
        [ "replace_errors()", "function" ],
        [ "strict_errors()", "function" ],
        [ "xmlcharrefreplace_errors()", "function" ]
    ],
    "codeop": [
        [ "CommandCompiler", "class" ],
        [ "Compile", "class" ],
        [ "compile_command()", "function" ]
    ],
    "collections": [
        [ "Callable", "class" ],
        [ "Container", "class" ],
        [ "Counter", "class" ],
        [ "Hashable", "class" ],
        [ "ItemsView", "class" ],
        [ "Iterable", "class" ],
        [ "Iterator", "class" ],
        [ "KeysView", "class" ],
        [ "Mapping", "class" ],
        [ "MappingView", "class" ],
        [ "MutableMapping", "class" ],
        [ "MutableSequence", "class" ],
        [ "MutableSet", "class" ],
        [ "OrderedDict", "class" ],
        [ "Sequence", "class" ],
        [ "Set", "class" ],
        [ "Sized", "class" ],
        [ "ValuesView", "class" ],
        [ "defaultdict", "class" ],
        [ "deque", "class" ],
        [ "namedtuple()", "function" ]
    ],
    "colorsys": [
        [ "hls_to_rgb()", "function" ],
        [ "hsv_to_rgb()", "function" ],
        [ "rgb_to_hls()", "function" ],
        [ "rgb_to_hsv()", "function" ],
        [ "rgb_to_yiq()", "function" ],
        [ "yiq_to_rgb()", "function" ]
    ],
    "commands": [
        [ "getoutput()", "function" ],
        [ "getstatus()", "function" ],
        [ "getstatusoutput()", "function" ]
    ],
    "compileall": [
        [ "compile_dir()", "function" ],
        [ "compile_file()", "function" ],
        [ "compile_path()", "function" ]
    ],
    "compiler": [
        [ "ast", "mod" ],
        [ "compile()", "function" ],
        [ "compileFile()", "function" ],
        [ "parse()", "function" ],
        [ "parseFile()", "function" ],
        [ "visitor", "mod" ],
        [ "walk()", "function" ]
    ],
    "console": [
        [ "alert()", "function" ],
        [ "clear()", "function" ],
        [ "hide_activity()", "function" ],
        [ "hide_output()", "function" ],
        [ "hud_alert()", "function" ],
        [ "input_alert()", "function" ],
        [ "is_in_background()", "function" ],
        [ "login_alert()", "function" ],
        [ "open_in()", "function" ],
        [ "password_alert()", "function" ],
        [ "quicklook()", "function" ],
        [ "secure_input()", "function" ],
        [ "set_color()", "function" ],
        [ "set_font()", "function" ],
        [ "set_idle_timer_disabled()", "function" ],
        [ "show_activity()", "function" ],
        [ "show_image()", "function" ],
        [ "write_link()", "function" ]
    ],
    "contacts": [
        [ "Group", "class" ],
        [ "Person", "class" ],
        [ "add_group()", "function" ],
        [ "add_person()", "function" ],
        [ "find()", "function" ],
        [ "get_all_groups()", "function" ],
        [ "get_all_people()", "function" ],
        [ "get_group()", "function" ],
        [ "get_person()", "function" ],
        [ "is_authorized()", "function" ],
        [ "localized_label()", "function" ],
        [ "remove_group()", "function" ],
        [ "remove_person()", "function" ],
        [ "revert()", "function" ],
        [ "save()", "function" ]
    ],
    "container": [
        [ "__iter__", "method" ]
    ],
    "contextlib": [
        [ "closing()", "function" ],
        [ "contextmanager()", "function" ],
        [ "nested()", "function" ]
    ],
    "contextmanager": [
        [ "__enter__", "method" ],
        [ "__exit__", "method" ]
    ],
    "cookielib": [
        [ "Cookie", "class" ],
        [ "CookieJar", "class" ],
        [ "CookiePolicy", "class" ],
        [ "DefaultCookiePolicy", "class" ],
        [ "FileCookieJar", "class" ],
        [ "LWPCookieJar", "class" ],
        [ "LoadError", "exception" ],
        [ "MozillaCookieJar", "class" ]
    ],
    "copy": [
        [ "copy()", "function" ],
        [ "deepcopy()", "function" ],
        [ "error", "exception" ]
    ],
    "copy_reg": [
        [ "constructor()", "function" ],
        [ "pickle()", "function" ]
    ],
    "crypt": [
        [ "crypt()", "function" ]
    ],
    "csv": [
        [ "Dialect", "class" ],
        [ "DictReader", "class" ],
        [ "DictWriter", "class" ],
        [ "Error", "exception" ],
        [ "QUOTE_ALL", "data" ],
        [ "QUOTE_MINIMAL", "data" ],
        [ "QUOTE_NONE", "data" ],
        [ "QUOTE_NONNUMERIC", "data" ],
        [ "Sniffer", "class" ],
        [ "excel", "class" ],
        [ "excel_tab", "class" ],
        [ "field_size_limit()", "function" ],
        [ "get_dialect()", "function" ],
        [ "list_dialects()", "function" ],
        [ "reader()", "function" ],
        [ "register_dialect()", "function" ],
        [ "unregister_dialect()", "function" ],
        [ "writer()", "function" ]
    ],
    "ctypes": [
        [ "ArgumentError", "exception" ],
        [ "BigEndianStructure", "class" ],
        [ "CDLL", "class" ],
        [ "CFUNCTYPE()", "function" ],
        [ "DllCanUnloadNow()", "function" ],
        [ "DllGetClassObject()", "function" ],
        [ "FormatError()", "function" ],
        [ "GetLastError()", "function" ],
        [ "HRESULT", "class" ],
        [ "LibraryLoader", "class" ],
        [ "LittleEndianStructure", "class" ],
        [ "OleDLL", "class" ],
        [ "POINTER()", "function" ],
        [ "PYFUNCTYPE()", "function" ],
        [ "PyDLL", "class" ],
        [ "Structure", "class" ],
        [ "Union", "class" ],
        [ "WINFUNCTYPE()", "function" ],
        [ "WinDLL", "class" ],
        [ "WinError()", "function" ],
        [ "_CData", "class" ],
        [ "_FuncPtr", "class" ],
        [ "_SimpleCData", "class" ],
        [ "addressof()", "function" ],
        [ "alignment()", "function" ],
        [ "byref()", "function" ],
        [ "c_bool", "class" ],
        [ "c_byte", "class" ],
        [ "c_char", "class" ],
        [ "c_char_p", "class" ],
        [ "c_double", "class" ],
        [ "c_float", "class" ],
        [ "c_int", "class" ],
        [ "c_int16", "class" ],
        [ "c_int32", "class" ],
        [ "c_int64", "class" ],
        [ "c_int8", "class" ],
        [ "c_long", "class" ],
        [ "c_longdouble", "class" ],
        [ "c_longlong", "class" ],
        [ "c_short", "class" ],
        [ "c_size_t", "class" ],
        [ "c_ssize_t", "class" ],
        [ "c_ubyte", "class" ],
        [ "c_uint", "class" ],
        [ "c_uint16", "class" ],
        [ "c_uint32", "class" ],
        [ "c_uint64", "class" ],
        [ "c_uint8", "class" ],
        [ "c_ulong", "class" ],
        [ "c_ulonglong", "class" ],
        [ "c_ushort", "class" ],
        [ "c_void_p", "class" ],
        [ "c_wchar", "class" ],
        [ "c_wchar_p", "class" ],
        [ "cast()", "function" ],
        [ "create_string_buffer()", "function" ],
        [ "create_unicode_buffer()", "function" ],
        [ "get_errno()", "function" ],
        [ "get_last_error()", "function" ],
        [ "memmove()", "function" ],
        [ "memset()", "function" ],
        [ "pointer()", "function" ],
        [ "py_object", "class" ],
        [ "resize()", "function" ],
        [ "set_conversion_mode()", "function" ],
        [ "set_errno()", "function" ],
        [ "set_last_error()", "function" ],
        [ "sizeof()", "function" ],
        [ "string_at()", "function" ],
        [ "wstring_at()", "function" ]
    ],
    "datetime": [
        [ "MAXYEAR", "data" ],
        [ "MINYEAR", "data" ],
        [ "date", "class" ],
        [ "datetime", "class" ],
        [ "time", "class" ],
        [ "timedelta", "class" ],
        [ "tzinfo", "class" ]
    ],
    "decimal": [
        [ "BasicContext", "class" ],
        [ "Clamped", "class" ],
        [ "Context", "class" ],
        [ "Decimal", "class" ],
        [ "DecimalException", "class" ],
        [ "DefaultContext", "class" ],
        [ "DivisionByZero", "class" ],
        [ "ExtendedContext", "class" ],
        [ "Inexact", "class" ],
        [ "InvalidOperation", "class" ],
        [ "Overflow", "class" ],
        [ "Rounded", "class" ],
        [ "Subnormal", "class" ],
        [ "Underflow", "class" ],
        [ "getcontext()", "function" ],
        [ "localcontext()", "function" ],
        [ "setcontext()", "function" ]
    ],
    "dialogs": [
        [ "alert()", "function" ],
        [ "date_dialog()", "function" ],
        [ "datetime_dialog()", "function" ],
        [ "duration_dialog()", "function" ],
        [ "edit_list_dialog()", "function" ],
        [ "form_dialog()", "function" ],
        [ "hud_alert()", "function" ],
        [ "input_alert()", "function" ],
        [ "list_dialog()", "function" ],
        [ "login_alert()", "function" ],
        [ "password_alert()", "function" ],
        [ "share_image()", "function" ],
        [ "share_text()", "function" ],
        [ "share_url()", "function" ],
        [ "text_dialog()", "function" ],
        [ "time_dialog()", "function" ]
    ],
    "dict": [
        [ "clear", "method" ],
        [ "copy", "method" ],
        [ "fromkeys", "method" ],
        [ "get", "method" ],
        [ "has_key", "method" ],
        [ "items", "method" ],
        [ "iteritems", "method" ],
        [ "iterkeys", "method" ],
        [ "itervalues", "method" ],
        [ "keys", "method" ],
        [ "pop", "method" ],
        [ "popitem", "method" ],
        [ "setdefault", "method" ],
        [ "update", "method" ],
        [ "values", "method" ],
        [ "viewitems", "method" ],
        [ "viewkeys", "method" ],
        [ "viewvalues", "method" ]
    ],
    "difflib": [
        [ "Differ", "class" ],
        [ "HtmlDiff", "class" ],
        [ "IS_CHARACTER_JUNK()", "function" ],
        [ "IS_LINE_JUNK()", "function" ],
        [ "SequenceMatcher", "class" ],
        [ "context_diff()", "function" ],
        [ "get_close_matches()", "function" ],
        [ "ndiff()", "function" ],
        [ "restore()", "function" ],
        [ "unified_diff()", "function" ]
    ],
    "dircache": [
        [ "annotate()", "function" ],
        [ "listdir()", "function" ],
        [ "opendir()", "function" ],
        [ "reset()", "function" ]
    ],
    "dis": [
        [ "cmp_op", "data" ],
        [ "dis()", "function" ],
        [ "disassemble()", "function" ],
        [ "disco()", "function" ],
        [ "distb()", "function" ],
        [ "findlabels()", "function" ],
        [ "findlinestarts()", "function" ],
        [ "hascompare", "data" ],
        [ "hasconst", "data" ],
        [ "hasfree", "data" ],
        [ "hasjabs", "data" ],
        [ "hasjrel", "data" ],
        [ "haslocal", "data" ],
        [ "hasname", "data" ],
        [ "opmap", "data" ],
        [ "opname", "data" ]
    ],
    "doctest": [
        [ "COMPARISON_FLAGS", "data" ],
        [ "DONT_ACCEPT_BLANKLINE", "data" ],
        [ "DONT_ACCEPT_TRUE_FOR_1", "data" ],
        [ "DebugRunner", "class" ],
        [ "DocFileSuite()", "function" ],
        [ "DocTest", "class" ],
        [ "DocTestFailure", "exception" ],
        [ "DocTestFinder", "class" ],
        [ "DocTestParser", "class" ],
        [ "DocTestRunner", "class" ],
        [ "DocTestSuite()", "function" ],
        [ "ELLIPSIS", "data" ],
        [ "Example", "class" ],
        [ "IGNORE_EXCEPTION_DETAIL", "data" ],
        [ "NORMALIZE_WHITESPACE", "data" ],
        [ "OutputChecker", "class" ],
        [ "REPORTING_FLAGS", "data" ],
        [ "REPORT_CDIFF", "data" ],
        [ "REPORT_NDIFF", "data" ],
        [ "REPORT_ONLY_FIRST_FAILURE", "data" ],
        [ "REPORT_UDIFF", "data" ],
        [ "SKIP", "data" ],
        [ "UnexpectedException", "exception" ],
        [ "debug()", "function" ],
        [ "debug_src()", "function" ],
        [ "register_optionflag()", "function" ],
        [ "run_docstring_examples()", "function" ],
        [ "script_from_examples()", "function" ],
        [ "set_unittest_reportflags()", "function" ],
        [ "testfile()", "function" ],
        [ "testmod()", "function" ],
        [ "testsource()", "function" ]
    ],
    "dumbdbm": [
        [ "error", "exception" ],
        [ "open()", "function" ]
    ],
    "editor": [
        [ "annotate_line()", "function" ],
        [ "apply_ui_theme()", "function" ],
        [ "clear_annotations()", "function" ],
        [ "get_line_selection()", "function" ],
        [ "get_path()", "function" ],
        [ "get_selection()", "function" ],
        [ "get_text()", "function" ],
        [ "make_new_file()", "function" ],
        [ "open_file()", "function" ],
        [ "present_themed()", "function" ],
        [ "replace_text()", "function" ],
        [ "set_selection()", "function" ]
    ],
    "email": [
        [ "charset", "mod" ],
        [ "encoders", "mod" ],
        [ "errors", "mod" ],
        [ "generator", "mod" ],
        [ "header", "mod" ],
        [ "iterators", "mod" ],
        [ "message", "mod" ],
        [ "message_from_file()", "function" ],
        [ "message_from_string()", "function" ],
        [ "mime", "mod" ],
        [ "parser", "mod" ],
        [ "utils", "mod" ]
    ],
    "encodings": [
        [ "idna", "mod" ],
        [ "utf_8_sig", "mod" ]
    ],
    "errno": [
        [ "E2BIG", "data" ],
        [ "EACCES", "data" ],
        [ "EADDRINUSE", "data" ],
        [ "EADDRNOTAVAIL", "data" ],
        [ "EADV", "data" ],
        [ "EAFNOSUPPORT", "data" ],
        [ "EAGAIN", "data" ],
        [ "EALREADY", "data" ],
        [ "EBADE", "data" ],
        [ "EBADF", "data" ],
        [ "EBADFD", "data" ],
        [ "EBADMSG", "data" ],
        [ "EBADR", "data" ],
        [ "EBADRQC", "data" ],
        [ "EBADSLT", "data" ],
        [ "EBFONT", "data" ],
        [ "EBUSY", "data" ],
        [ "ECHILD", "data" ],
        [ "ECHRNG", "data" ],
        [ "ECOMM", "data" ],
        [ "ECONNABORTED", "data" ],
        [ "ECONNREFUSED", "data" ],
        [ "ECONNRESET", "data" ],
        [ "EDEADLK", "data" ],
        [ "EDEADLOCK", "data" ],
        [ "EDESTADDRREQ", "data" ],
        [ "EDOM", "data" ],
        [ "EDOTDOT", "data" ],
        [ "EDQUOT", "data" ],
        [ "EEXIST", "data" ],
        [ "EFAULT", "data" ],
        [ "EFBIG", "data" ],
        [ "EHOSTDOWN", "data" ],
        [ "EHOSTUNREACH", "data" ],
        [ "EIDRM", "data" ],
        [ "EILSEQ", "data" ],
        [ "EINPROGRESS", "data" ],
        [ "EINTR", "data" ],
        [ "EINVAL", "data" ],
        [ "EIO", "data" ],
        [ "EISCONN", "data" ],
        [ "EISDIR", "data" ],
        [ "EISNAM", "data" ],
        [ "EL2HLT", "data" ],
        [ "EL2NSYNC", "data" ],
        [ "EL3HLT", "data" ],
        [ "EL3RST", "data" ],
        [ "ELIBACC", "data" ],
        [ "ELIBBAD", "data" ],
        [ "ELIBEXEC", "data" ],
        [ "ELIBMAX", "data" ],
        [ "ELIBSCN", "data" ],
        [ "ELNRNG", "data" ],
        [ "ELOOP", "data" ],
        [ "EMFILE", "data" ],
        [ "EMLINK", "data" ],
        [ "EMSGSIZE", "data" ],
        [ "EMULTIHOP", "data" ],
        [ "ENAMETOOLONG", "data" ],
        [ "ENAVAIL", "data" ],
        [ "ENETDOWN", "data" ],
        [ "ENETRESET", "data" ],
        [ "ENETUNREACH", "data" ],
        [ "ENFILE", "data" ],
        [ "ENOANO", "data" ],
        [ "ENOBUFS", "data" ],
        [ "ENOCSI", "data" ],
        [ "ENODATA", "data" ],
        [ "ENODEV", "data" ],
        [ "ENOENT", "data" ],
        [ "ENOEXEC", "data" ],
        [ "ENOLCK", "data" ],
        [ "ENOLINK", "data" ],
        [ "ENOMEM", "data" ],
        [ "ENOMSG", "data" ],
        [ "ENONET", "data" ],
        [ "ENOPKG", "data" ],
        [ "ENOPROTOOPT", "data" ],
        [ "ENOSPC", "data" ],
        [ "ENOSR", "data" ],
        [ "ENOSTR", "data" ],
        [ "ENOSYS", "data" ],
        [ "ENOTBLK", "data" ],
        [ "ENOTCONN", "data" ],
        [ "ENOTDIR", "data" ],
        [ "ENOTEMPTY", "data" ],
        [ "ENOTNAM", "data" ],
        [ "ENOTSOCK", "data" ],
        [ "ENOTTY", "data" ],
        [ "ENOTUNIQ", "data" ],
        [ "ENXIO", "data" ],
        [ "EOPNOTSUPP", "data" ],
        [ "EOVERFLOW", "data" ],
        [ "EPERM", "data" ],
        [ "EPFNOSUPPORT", "data" ],
        [ "EPIPE", "data" ],
        [ "EPROTO", "data" ],
        [ "EPROTONOSUPPORT", "data" ],
        [ "EPROTOTYPE", "data" ],
        [ "ERANGE", "data" ],
        [ "EREMCHG", "data" ],
        [ "EREMOTE", "data" ],
        [ "EREMOTEIO", "data" ],
        [ "ERESTART", "data" ],
        [ "EROFS", "data" ],
        [ "ESHUTDOWN", "data" ],
        [ "ESOCKTNOSUPPORT", "data" ],
        [ "ESPIPE", "data" ],
        [ "ESRCH", "data" ],
        [ "ESRMNT", "data" ],
        [ "ESTALE", "data" ],
        [ "ESTRPIPE", "data" ],
        [ "ETIME", "data" ],
        [ "ETIMEDOUT", "data" ],
        [ "ETOOMANYREFS", "data" ],
        [ "ETXTBSY", "data" ],
        [ "EUCLEAN", "data" ],
        [ "EUNATCH", "data" ],
        [ "EUSERS", "data" ],
        [ "EWOULDBLOCK", "data" ],
        [ "EXDEV", "data" ],
        [ "EXFULL", "data" ],
        [ "errorcode", "data" ]
    ],
    "exceptions": [
        [ "ArithmeticError", "exception" ],
        [ "AssertionError", "exception" ],
        [ "AttributeError", "exception" ],
        [ "BaseException", "exception" ],
        [ "BufferError", "exception" ],
        [ "DeprecationWarning", "exception" ],
        [ "EOFError", "exception" ],
        [ "EnvironmentError", "exception" ],
        [ "Exception", "exception" ],
        [ "FloatingPointError", "exception" ],
        [ "FutureWarning", "exception" ],
        [ "GeneratorExit", "exception" ],
        [ "IOError", "exception" ],
        [ "ImportError", "exception" ],
        [ "ImportWarning", "exception" ],
        [ "IndentationError", "exception" ],
        [ "IndexError", "exception" ],
        [ "KeyError", "exception" ],
        [ "KeyboardInterrupt", "exception" ],
        [ "LookupError", "exception" ],
        [ "MemoryError", "exception" ],
        [ "NameError", "exception" ],
        [ "NotImplementedError", "exception" ],
        [ "OSError", "exception" ],
        [ "OverflowError", "exception" ],
        [ "PendingDeprecationWarning", "exception" ],
        [ "ReferenceError", "exception" ],
        [ "RuntimeError", "exception" ],
        [ "RuntimeWarning", "exception" ],
        [ "StandardError", "exception" ],
        [ "StopIteration", "exception" ],
        [ "SyntaxError", "exception" ],
        [ "SyntaxWarning", "exception" ],
        [ "SystemError", "exception" ],
        [ "SystemExit", "exception" ],
        [ "TabError", "exception" ],
        [ "TypeError", "exception" ],
        [ "UnboundLocalError", "exception" ],
        [ "UnicodeDecodeError", "exception" ],
        [ "UnicodeEncodeError", "exception" ],
        [ "UnicodeError", "exception" ],
        [ "UnicodeTranslateError", "exception" ],
        [ "UnicodeWarning", "exception" ],
        [ "UserWarning", "exception" ],
        [ "VMSError", "exception" ],
        [ "ValueError", "exception" ],
        [ "Warning", "exception" ],
        [ "WindowsError", "exception" ],
        [ "ZeroDivisionError", "exception" ]
    ],
    "fcntl": [
        [ "fcntl()", "function" ],
        [ "flock()", "function" ],
        [ "ioctl()", "function" ],
        [ "lockf()", "function" ]
    ],
    "feedparser": [
        [ "parse()", "function" ]
    ],
    "file": [
        [ "close", "method" ],
        [ "closed", "attribute" ],
        [ "encoding", "attribute" ],
        [ "errors", "attribute" ],
        [ "fileno", "method" ],
        [ "flush", "method" ],
        [ "isatty", "method" ],
        [ "mode", "attribute" ],
        [ "name", "attribute" ],
        [ "newlines", "attribute" ],
        [ "next", "method" ],
        [ "read", "method" ],
        [ "readline", "method" ],
        [ "readlines", "method" ],
        [ "seek", "method" ],
        [ "softspace", "attribute" ],
        [ "tell", "method" ],
        [ "truncate", "method" ],
        [ "write", "method" ],
        [ "writelines", "method" ],
        [ "xreadlines", "method" ]
    ],
    "filecmp": [
        [ "cmp()", "function" ],
        [ "cmpfiles()", "function" ],
        [ "dircmp", "class" ]
    ],
    "fileinput": [
        [ "FileInput", "class" ],
        [ "close()", "function" ],
        [ "filelineno()", "function" ],
        [ "filename()", "function" ],
        [ "fileno()", "function" ],
        [ "hook_compressed()", "function" ],
        [ "hook_encoded()", "function" ],
        [ "input()", "function" ],
        [ "isfirstline()", "function" ],
        [ "isstdin()", "function" ],
        [ "lineno()", "function" ],
        [ "nextfile()", "function" ]
    ],
    "float": [
        [ "as_integer_ratio", "method" ],
        [ "fromhex", "method" ],
        [ "hex", "method" ],
        [ "is_integer", "method" ]
    ],
    "fnmatch": [
        [ "filter()", "function" ],
        [ "fnmatch()", "function" ],
        [ "fnmatchcase()", "function" ],
        [ "translate()", "function" ]
    ],
    "formatter": [
        [ "AS_IS", "data" ],
        [ "AbstractFormatter", "class" ],
        [ "AbstractWriter", "class" ],
        [ "DumbWriter", "class" ],
        [ "NullFormatter", "class" ],
        [ "NullWriter", "class" ]
    ],
    "fpformat": [
        [ "NotANumber", "exception" ],
        [ "fix()", "function" ],
        [ "sci()", "function" ]
    ],
    "fractions": [
        [ "Fraction", "class" ],
        [ "gcd()", "function" ]
    ],
    "ftplib": [
        [ "FTP", "class" ],
        [ "FTP_TLS", "class" ],
        [ "all_errors", "data" ],
        [ "error_perm", "exception" ],
        [ "error_proto", "exception" ],
        [ "error_reply", "exception" ],
        [ "error_temp", "exception" ]
    ],
    "functools": [
        [ "cmp_to_key()", "function" ],
        [ "partial()", "function" ],
        [ "reduce()", "function" ],
        [ "total_ordering()", "function" ],
        [ "update_wrapper()", "function" ],
        [ "wraps()", "function" ]
    ],
    "gc": [
        [ "DEBUG_COLLECTABLE", "data" ],
        [ "DEBUG_INSTANCES", "data" ],
        [ "DEBUG_LEAK", "data" ],
        [ "DEBUG_OBJECTS", "data" ],
        [ "DEBUG_SAVEALL", "data" ],
        [ "DEBUG_STATS", "data" ],
        [ "DEBUG_UNCOLLECTABLE", "data" ],
        [ "collect()", "function" ],
        [ "disable()", "function" ],
        [ "enable()", "function" ],
        [ "garbage", "data" ],
        [ "get_count()", "function" ],
        [ "get_debug()", "function" ],
        [ "get_objects()", "function" ],
        [ "get_referents()", "function" ],
        [ "get_referrers()", "function" ],
        [ "get_threshold()", "function" ],
        [ "is_tracked()", "function" ],
        [ "isenabled()", "function" ],
        [ "set_debug()", "function" ],
        [ "set_threshold()", "function" ]
    ],
    "generator": [
        [ "close", "method" ],
        [ "next", "method" ],
        [ "send", "method" ],
        [ "throw", "method" ]
    ],
    "getopt": [
        [ "GetoptError", "exception" ],
        [ "error", "exception" ],
        [ "getopt()", "function" ],
        [ "gnu_getopt()", "function" ]
    ],
    "getpass": [
        [ "getpass()", "function" ]
    ],
    "gettext": [
        [ "NullTranslations", "class" ],
        [ "bind_textdomain_codeset()", "function" ],
        [ "bindtextdomain()", "function" ],
        [ "dgettext()", "function" ],
        [ "dngettext()", "function" ],
        [ "find()", "function" ],
        [ "gettext()", "function" ],
        [ "install()", "function" ],
        [ "ldgettext()", "function" ],
        [ "ldngettext()", "function" ],
        [ "lgettext()", "function" ],
        [ "lngettext()", "function" ],
        [ "ngettext()", "function" ],
        [ "textdomain()", "function" ],
        [ "translation()", "function" ]
    ],
    "glob": [
        [ "glob()", "function" ],
        [ "iglob()", "function" ]
    ],
    "gzip": [
        [ "GzipFile", "class" ],
        [ "open()", "function" ]
    ],
    "heapq": [
        [ "heapify()", "function" ],
        [ "heappop()", "function" ],
        [ "heappush()", "function" ],
        [ "heappushpop()", "function" ],
        [ "heapreplace()", "function" ],
        [ "merge()", "function" ],
        [ "nlargest()", "function" ],
        [ "nsmallest()", "function" ]
    ],
    "hmac": [
        [ "new()", "function" ]
    ],
    "htmlentitydefs": [
        [ "codepoint2name", "data" ],
        [ "entitydefs", "data" ],
        [ "name2codepoint", "data" ]
    ],
    "htmllib": [
        [ "HTMLParseError", "exception" ],
        [ "HTMLParser", "class" ]
    ],
    "httplib": [
        [ "BadStatusLine", "exception" ],
        [ "CannotSendHeader", "exception" ],
        [ "CannotSendRequest", "exception" ],
        [ "HTTPConnection", "class" ],
        [ "HTTPException", "exception" ],
        [ "HTTPMessage", "class" ],
        [ "HTTPResponse", "class" ],
        [ "HTTPSConnection", "class" ],
        [ "HTTPS_PORT", "data" ],
        [ "HTTP_PORT", "data" ],
        [ "ImproperConnectionState", "exception" ],
        [ "IncompleteRead", "exception" ],
        [ "InvalidURL", "exception" ],
        [ "NotConnected", "exception" ],
        [ "ResponseNotReady", "exception" ],
        [ "UnimplementedFileMode", "exception" ],
        [ "UnknownProtocol", "exception" ],
        [ "UnknownTransferEncoding", "exception" ],
        [ "responses", "data" ]
    ],
    "imaplib": [
        [ "IMAP4", "class" ],
        [ "IMAP4_SSL", "class" ],
        [ "IMAP4_stream", "class" ],
        [ "Int2AP()", "function" ],
        [ "Internaldate2tuple()", "function" ],
        [ "ParseFlags()", "function" ],
        [ "Time2Internaldate()", "function" ]
    ],
    "imghdr": [
        [ "tests", "data" ],
        [ "what()", "function" ]
    ],
    "imp": [
        [ "C_BUILTIN", "data" ],
        [ "C_EXTENSION", "data" ],
        [ "NullImporter", "class" ],
        [ "PKG_DIRECTORY", "data" ],
        [ "PY_COMPILED", "data" ],
        [ "PY_FROZEN", "data" ],
        [ "PY_SOURCE", "data" ],
        [ "SEARCH_ERROR", "data" ],
        [ "acquire_lock()", "function" ],
        [ "find_module()", "function" ],
        [ "get_magic()", "function" ],
        [ "get_suffixes()", "function" ],
        [ "init_builtin()", "function" ],
        [ "init_frozen()", "function" ],
        [ "is_builtin()", "function" ],
        [ "is_frozen()", "function" ],
        [ "load_compiled()", "function" ],
        [ "load_dynamic()", "function" ],
        [ "load_module()", "function" ],
        [ "load_source()", "function" ],
        [ "lock_held()", "function" ],
        [ "new_module()", "function" ],
        [ "release_lock()", "function" ]
    ],
    "importlib": [
        [ "import_module()", "function" ]
    ],
    "imputil": [
        [ "BuiltinImporter", "class" ],
        [ "DynLoadSuffixImporter", "class" ],
        [ "ImportManager", "class" ],
        [ "Importer", "class" ],
        [ "py_suffix_importer()", "function" ]
    ],
    "inspect": [
        [ "cleandoc()", "function" ],
        [ "currentframe()", "function" ],
        [ "formatargspec()", "function" ],
        [ "formatargvalues()", "function" ],
        [ "getargspec()", "function" ],
        [ "getargvalues()", "function" ],
        [ "getcallargs()", "function" ],
        [ "getclasstree()", "function" ],
        [ "getcomments()", "function" ],
        [ "getdoc()", "function" ],
        [ "getfile()", "function" ],
        [ "getframeinfo()", "function" ],
        [ "getinnerframes()", "function" ],
        [ "getmembers()", "function" ],
        [ "getmodule()", "function" ],
        [ "getmoduleinfo()", "function" ],
        [ "getmodulename()", "function" ],
        [ "getmro()", "function" ],
        [ "getouterframes()", "function" ],
        [ "getsource()", "function" ],
        [ "getsourcefile()", "function" ],
        [ "getsourcelines()", "function" ],
        [ "isabstract()", "function" ],
        [ "isbuiltin()", "function" ],
        [ "isclass()", "function" ],
        [ "iscode()", "function" ],
        [ "isdatadescriptor()", "function" ],
        [ "isframe()", "function" ],
        [ "isfunction()", "function" ],
        [ "isgenerator()", "function" ],
        [ "isgeneratorfunction()", "function" ],
        [ "isgetsetdescriptor()", "function" ],
        [ "ismemberdescriptor()", "function" ],
        [ "ismethod()", "function" ],
        [ "ismethoddescriptor()", "function" ],
        [ "ismodule()", "function" ],
        [ "isroutine()", "function" ],
        [ "istraceback()", "function" ],
        [ "stack()", "function" ],
        [ "trace()", "function" ]
    ],
    "instance": [
        [ "__class__", "attribute" ]
    ],
    "int": [
        [ "bit_length", "method" ]
    ],
    "io": [
        [ "BlockingIOError", "exception" ],
        [ "BufferedIOBase", "class" ],
        [ "BufferedRWPair", "class" ],
        [ "BufferedRandom", "class" ],
        [ "BufferedReader", "class" ],
        [ "BufferedWriter", "class" ],
        [ "BytesIO", "class" ],
        [ "DEFAULT_BUFFER_SIZE", "data" ],
        [ "FileIO", "class" ],
        [ "IOBase", "class" ],
        [ "IncrementalNewlineDecoder", "class" ],
        [ "RawIOBase", "class" ],
        [ "StringIO", "class" ],
        [ "TextIOBase", "class" ],
        [ "TextIOWrapper", "class" ],
        [ "UnsupportedOperation", "exception" ],
        [ "open()", "function" ]
    ],
    "iterator": [
        [ "__iter__", "method" ],
        [ "next", "method" ]
    ],
    "itertools": [
        [ "chain()", "function" ],
        [ "combinations()", "function" ],
        [ "combinations_with_replacement()", "function" ],
        [ "compress()", "function" ],
        [ "count()", "function" ],
        [ "cycle()", "function" ],
        [ "dropwhile()", "function" ],
        [ "groupby()", "function" ],
        [ "ifilter()", "function" ],
        [ "ifilterfalse()", "function" ],
        [ "imap()", "function" ],
        [ "islice()", "function" ],
        [ "izip()", "function" ],
        [ "izip_longest()", "function" ],
        [ "permutations()", "function" ],
        [ "product()", "function" ],
        [ "repeat()", "function" ],
        [ "starmap()", "function" ],
        [ "takewhile()", "function" ],
        [ "tee()", "function" ]
    ],
    "json": [
        [ "JSONDecoder", "class" ],
        [ "JSONEncoder", "class" ],
        [ "dump()", "function" ],
        [ "dumps()", "function" ],
        [ "load()", "function" ],
        [ "loads()", "function" ]
    ],
    "keychain": [
        [ "delete_password()", "function" ],
        [ "get_password()", "function" ],
        [ "reset_keychain()", "function" ],
        [ "set_password()", "function" ]
    ],
    "keyword": [
        [ "iskeyword()", "function" ],
        [ "kwlist", "data" ]
    ],
    "linecache": [
        [ "checkcache()", "function" ],
        [ "clearcache()", "function" ],
        [ "getline()", "function" ]
    ],
    "linguistictagger": [
        [ "SCHEME_LANGUAGE", "data" ],
        [ "SCHEME_LEMMA", "data" ],
        [ "SCHEME_LEXICAL_CLASS", "data" ],
        [ "SCHEME_NAME_TYPE", "data" ],
        [ "SCHEME_NAME_TYPE_OR_LEXICAL_CLASS", "data" ],
        [ "SCHEME_SCRIPT", "data" ],
        [ "SCHEME_TOKEN_TYPE", "data" ],
        [ "tag_string()", "function" ]
    ],
    "locale": [
        [ "ALT_DIGITS", "data" ],
        [ "CHAR_MAX", "data" ],
        [ "CODESET", "data" ],
        [ "CRNCYSTR", "data" ],
        [ "D_FMT", "data" ],
        [ "D_T_FMT", "data" ],
        [ "ERA", "data" ],
        [ "ERA_D_FMT", "data" ],
        [ "ERA_D_T_FMT", "data" ],
        [ "ERA_T_FMT", "data" ],
        [ "Error", "exception" ],
        [ "LC_ALL", "data" ],
        [ "LC_COLLATE", "data" ],
        [ "LC_CTYPE", "data" ],
        [ "LC_MESSAGES", "data" ],
        [ "LC_MONETARY", "data" ],
        [ "LC_NUMERIC", "data" ],
        [ "LC_TIME", "data" ],
        [ "NOEXPR", "data" ],
        [ "RADIXCHAR", "data" ],
        [ "THOUSEP", "data" ],
        [ "T_FMT", "data" ],
        [ "T_FMT_AMPM", "data" ],
        [ "YESEXPR", "data" ],
        [ "atof()", "function" ],
        [ "atoi()", "function" ],
        [ "currency()", "function" ],
        [ "format()", "function" ],
        [ "format_string()", "function" ],
        [ "getdefaultlocale()", "function" ],
        [ "getlocale()", "function" ],
        [ "getpreferredencoding()", "function" ],
        [ "localeconv()", "function" ],
        [ "nl_langinfo()", "function" ],
        [ "normalize()", "function" ],
        [ "resetlocale()", "function" ],
        [ "setlocale()", "function" ],
        [ "str()", "function" ],
        [ "strcoll()", "function" ],
        [ "strxfrm()", "function" ]
    ],
    "location": [
        [ "geocode()", "function" ],
        [ "get_location()", "function" ],
        [ "is_authorized()", "function" ],
        [ "reverse_geocode()", "function" ],
        [ "start_updates()", "function" ],
        [ "stop_updates()", "function" ]
    ],
    "logging": [
        [ "FileHandler", "class" ],
        [ "Filter", "class" ],
        [ "Formatter", "class" ],
        [ "LogRecord", "class" ],
        [ "Logger", "class" ],
        [ "LoggerAdapter", "class" ],
        [ "NullHandler", "class" ],
        [ "StreamHandler", "class" ],
        [ "addLevelName()", "function" ],
        [ "basicConfig()", "function" ],
        [ "captureWarnings()", "function" ],
        [ "config", "mod" ],
        [ "critical()", "function" ],
        [ "debug()", "function" ],
        [ "disable()", "function" ],
        [ "error()", "function" ],
        [ "exception()", "function" ],
        [ "getLevelName()", "function" ],
        [ "getLogger()", "function" ],
        [ "getLoggerClass()", "function" ],
        [ "handlers", "mod" ],
        [ "info()", "function" ],
        [ "log()", "function" ],
        [ "makeLogRecord()", "function" ],
        [ "setLoggerClass()", "function" ],
        [ "shutdown()", "function" ],
        [ "warning()", "function" ]
    ],
    "long": [
        [ "bit_length", "method" ]
    ],
    "mailbox": [
        [ "Babyl", "class" ],
        [ "BabylMailbox", "class" ],
        [ "BabylMessage", "class" ],
        [ "Error", "exception" ],
        [ "ExternalClashError", "exception" ],
        [ "FormatError", "exception" ],
        [ "MH", "class" ],
        [ "MHMailbox", "class" ],
        [ "MHMessage", "class" ],
        [ "MMDF", "class" ],
        [ "MMDFMessage", "class" ],
        [ "Mailbox", "class" ],
        [ "Maildir", "class" ],
        [ "MaildirMessage", "class" ],
        [ "Message", "class" ],
        [ "MmdfMailbox", "class" ],
        [ "NoSuchMailboxError", "exception" ],
        [ "NotEmptyError", "exception" ],
        [ "PortableUnixMailbox", "class" ],
        [ "UnixMailbox", "class" ],
        [ "mbox", "class" ],
        [ "mboxMessage", "class" ]
    ],
    "mailcap": [
        [ "findmatch()", "function" ],
        [ "getcaps()", "function" ]
    ],
    "markdown": [
        [ "Markdown", "class" ],
        [ "markdown()", "function" ],
        [ "markdownFromFile()", "function" ]
    ],
    "markdown2": [
        [ "markdown()", "function" ],
        [ "markdown_path()", "function" ]
    ],
    "marshal": [
        [ "dump()", "function" ],
        [ "dumps()", "function" ],
        [ "load()", "function" ],
        [ "loads()", "function" ],
        [ "version", "data" ]
    ],
    "math": [
        [ "acos()", "function" ],
        [ "acosh()", "function" ],
        [ "asin()", "function" ],
        [ "asinh()", "function" ],
        [ "atan()", "function" ],
        [ "atan2()", "function" ],
        [ "atanh()", "function" ],
        [ "ceil()", "function" ],
        [ "copysign()", "function" ],
        [ "cos()", "function" ],
        [ "cosh()", "function" ],
        [ "degrees()", "function" ],
        [ "e", "data" ],
        [ "erf()", "function" ],
        [ "erfc()", "function" ],
        [ "exp()", "function" ],
        [ "expm1()", "function" ],
        [ "fabs()", "function" ],
        [ "factorial()", "function" ],
        [ "floor()", "function" ],
        [ "fmod()", "function" ],
        [ "frexp()", "function" ],
        [ "fsum()", "function" ],
        [ "gamma()", "function" ],
        [ "hypot()", "function" ],
        [ "isinf()", "function" ],
        [ "isnan()", "function" ],
        [ "ldexp()", "function" ],
        [ "lgamma()", "function" ],
        [ "log()", "function" ],
        [ "log10()", "function" ],
        [ "log1p()", "function" ],
        [ "modf()", "function" ],
        [ "pi", "data" ],
        [ "pow()", "function" ],
        [ "radians()", "function" ],
        [ "sin()", "function" ],
        [ "sinh()", "function" ],
        [ "sqrt()", "function" ],
        [ "tan()", "function" ],
        [ "tanh()", "function" ],
        [ "trunc()", "function" ]
    ],
    "matplotlib": [
        [ "RcParams", "class" ],
        [ "afm", "mod" ],
        [ "animation", "mod" ],
        [ "artist", "mod" ],
        [ "axes", "mod" ],
        [ "axis", "mod" ],
        [ "backend_bases", "mod" ],
        [ "cbook", "mod" ],
        [ "cm", "mod" ],
        [ "collections", "mod" ],
        [ "colorbar", "mod" ],
        [ "colors", "mod" ],
        [ "dates", "mod" ],
        [ "dviread", "mod" ],
        [ "figure", "mod" ],
        [ "font_manager", "mod" ],
        [ "fontconfig_pattern", "mod" ],
        [ "get_backend()", "function" ],
        [ "gridspec", "mod" ],
        [ "legend", "mod" ],
        [ "lines", "mod" ],
        [ "markers", "mod" ],
        [ "mathtext", "mod" ],
        [ "matplotlib_fname()", "function" ],
        [ "mlab", "mod" ],
        [ "patches", "mod" ],
        [ "path", "mod" ],
        [ "projections", "mod" ],
        [ "pyplot", "mod" ],
        [ "rc()", "function" ],
        [ "rc_context", "class" ],
        [ "rc_params()", "function" ],
        [ "rc_params_from_file()", "function" ],
        [ "sankey", "mod" ],
        [ "scale", "mod" ],
        [ "spines", "mod" ],
        [ "text", "mod" ],
        [ "ticker", "mod" ],
        [ "tight_layout", "mod" ],
        [ "transforms", "mod" ],
        [ "tri", "mod" ],
        [ "type1font", "mod" ],
        [ "units", "mod" ],
        [ "use()", "function" ],
        [ "widgets", "mod" ]
    ],
    "md5": [
        [ "digest_size", "data" ],
        [ "md5()", "function" ],
        [ "new()", "function" ]
    ],
    "memoryview": [
        [ "format", "attribute" ],
        [ "itemsize", "attribute" ],
        [ "ndim", "attribute" ],
        [ "readonly", "attribute" ],
        [ "shape", "attribute" ],
        [ "strides", "attribute" ],
        [ "tobytes", "method" ],
        [ "tolist", "method" ]
    ],
    "mhlib": [
        [ "Folder", "class" ],
        [ "MH", "class" ],
        [ "Message", "class" ]
    ],
    "mimetools": [
        [ "Message", "class" ],
        [ "choose_boundary()", "function" ],
        [ "copybinary()", "function" ],
        [ "copyliteral()", "function" ],
        [ "decode()", "function" ],
        [ "encode()", "function" ]
    ],
    "mimetypes": [
        [ "MimeTypes", "class" ],
        [ "add_type()", "function" ],
        [ "common_types", "data" ],
        [ "encodings_map", "data" ],
        [ "guess_all_extensions()", "function" ],
        [ "guess_extension()", "function" ],
        [ "guess_type()", "function" ],
        [ "init()", "function" ],
        [ "inited", "data" ],
        [ "knownfiles", "data" ],
        [ "read_mime_types()", "function" ],
        [ "suffix_map", "data" ],
        [ "types_map", "data" ]
    ],
    "mimify": [
        [ "CHARSET", "data" ],
        [ "MAXLEN", "data" ],
        [ "mime_decode_header()", "function" ],
        [ "mime_encode_header()", "function" ],
        [ "mimify()", "function" ],
        [ "unmimify()", "function" ]
    ],
    "mmap": [
        [ "close", "method" ],
        [ "find", "method" ],
        [ "flush", "method" ],
        [ "mmap", "class" ],
        [ "move", "method" ],
        [ "read", "method" ],
        [ "read_byte", "method" ],
        [ "readline", "method" ],
        [ "resize", "method" ],
        [ "rfind", "method" ],
        [ "seek", "method" ],
        [ "size", "method" ],
        [ "tell", "method" ],
        [ "write", "method" ],
        [ "write_byte", "method" ]
    ],
    "modulefinder": [
        [ "AddPackagePath()", "function" ],
        [ "ModuleFinder", "class" ],
        [ "ReplacePackage()", "function" ]
    ],
    "motion": [
        [ "get_attitude()", "function" ],
        [ "get_gravity()", "function" ],
        [ "get_magnetic_field()", "function" ],
        [ "get_user_acceleration()", "function" ],
        [ "start_updates()", "function" ],
        [ "stop_updates()", "function" ]
    ],
    "mpmath": [
        [ "acos()", "function" ],
        [ "acosh()", "function" ],
        [ "acot()", "function" ],
        [ "acoth()", "function" ],
        [ "acsc()", "function" ],
        [ "acsch()", "function" ],
        [ "agm()", "function" ],
        [ "airyai()", "function" ],
        [ "airyaizero()", "function" ],
        [ "airybi()", "function" ],
        [ "airybizero()", "function" ],
        [ "almosteq()", "function" ],
        [ "altzeta()", "function" ],
        [ "angerj()", "function" ],
        [ "appellf1()", "function" ],
        [ "appellf2()", "function" ],
        [ "appellf3()", "function" ],
        [ "appellf4()", "function" ],
        [ "arange()", "function" ],
        [ "arg()", "function" ],
        [ "asec()", "function" ],
        [ "asech()", "function" ],
        [ "asin()", "function" ],
        [ "asinh()", "function" ],
        [ "atan()", "function" ],
        [ "atan2()", "function" ],
        [ "atanh()", "function" ],
        [ "autoprec()", "function" ],
        [ "backlunds()", "function" ],
        [ "barnesg()", "function" ],
        [ "bei()", "function" ],
        [ "bell()", "function" ],
        [ "ber()", "function" ],
        [ "bernfrac()", "function" ],
        [ "bernoulli()", "function" ],
        [ "bernpoly()", "function" ],
        [ "besseli()", "function" ],
        [ "besselj()", "function" ],
        [ "besseljzero()", "function" ],
        [ "besselk()", "function" ],
        [ "bessely()", "function" ],
        [ "besselyzero()", "function" ],
        [ "beta()", "function" ],
        [ "betainc()", "function" ],
        [ "bihyper()", "function" ],
        [ "binomial()", "function" ],
        [ "cbrt()", "function" ],
        [ "ceil()", "function" ],
        [ "chebyfit()", "function" ],
        [ "chebyt()", "function" ],
        [ "chebyu()", "function" ],
        [ "chi()", "function" ],
        [ "cholesky()", "function" ],
        [ "chop()", "function" ],
        [ "ci()", "function" ],
        [ "clcos()", "function" ],
        [ "clsin()", "function" ],
        [ "conj()", "function" ],
        [ "cos()", "function" ],
        [ "cosh()", "function" ],
        [ "cosm()", "function" ],
        [ "cospi()", "function" ],
        [ "cot()", "function" ],
        [ "coth()", "function" ],
        [ "coulombc()", "function" ],
        [ "coulombf()", "function" ],
        [ "coulombg()", "function" ],
        [ "cplot()", "function" ],
        [ "csc()", "function" ],
        [ "csch()", "function" ],
        [ "cyclotomic()", "function" ],
        [ "degrees()", "function" ],
        [ "diff()", "function" ],
        [ "differint()", "function" ],
        [ "diffs()", "function" ],
        [ "diffs_exp()", "function" ],
        [ "diffs_prod()", "function" ],
        [ "digamma()", "function" ],
        [ "dirichlet()", "function" ],
        [ "e1()", "function" ],
        [ "ei()", "function" ],
        [ "ellipe()", "function" ],
        [ "ellipf()", "function" ],
        [ "ellipfun()", "function" ],
        [ "ellipk()", "function" ],
        [ "ellippi()", "function" ],
        [ "elliprc()", "function" ],
        [ "elliprd()", "function" ],
        [ "elliprf()", "function" ],
        [ "elliprg()", "function" ],
        [ "elliprj()", "function" ],
        [ "erf()", "function" ],
        [ "erfc()", "function" ],
        [ "erfi()", "function" ],
        [ "erfinv()", "function" ],
        [ "eulernum()", "function" ],
        [ "eulerpoly()", "function" ],
        [ "exp()", "function" ],
        [ "expint()", "function" ],
        [ "expj()", "function" ],
        [ "expjpi()", "function" ],
        [ "expm()", "function" ],
        [ "expm1()", "function" ],
        [ "extradps()", "function" ],
        [ "extraprec()", "function" ],
        [ "fabs()", "function" ],
        [ "fac2()", "function" ],
        [ "factorial()", "function" ],
        [ "fadd()", "function" ],
        [ "fdiv()", "function" ],
        [ "fdot()", "function" ],
        [ "ff()", "function" ],
        [ "fibonacci()", "function" ],
        [ "findpoly()", "function" ],
        [ "findroot()", "function" ],
        [ "floor()", "function" ],
        [ "fmod()", "function" ],
        [ "fmul()", "function" ],
        [ "fneg()", "function" ],
        [ "fourier()", "function" ],
        [ "fourierval()", "function" ],
        [ "fprod()", "function" ],
        [ "frac()", "function" ],
        [ "fraction()", "function" ],
        [ "fresnelc()", "function" ],
        [ "fresnels()", "function" ],
        [ "frexp()", "function" ],
        [ "fsub()", "function" ],
        [ "fsum()", "function" ],
        [ "gamma()", "function" ],
        [ "gammainc()", "function" ],
        [ "gammaprod()", "function" ],
        [ "gegenbauer()", "function" ],
        [ "grampoint()", "function" ],
        [ "hankel1()", "function" ],
        [ "hankel2()", "function" ],
        [ "harmonic()", "function" ],
        [ "hermite()", "function" ],
        [ "hyp0f1()", "function" ],
        [ "hyp1f1()", "function" ],
        [ "hyp1f2()", "function" ],
        [ "hyp2f0()", "function" ],
        [ "hyp2f1()", "function" ],
        [ "hyp2f2()", "function" ],
        [ "hyp2f3()", "function" ],
        [ "hyp3f2()", "function" ],
        [ "hyper()", "function" ],
        [ "hyper2d()", "function" ],
        [ "hypercomb()", "function" ],
        [ "hyperfac()", "function" ],
        [ "hyperu()", "function" ],
        [ "hypot()", "function" ],
        [ "identify()", "function" ],
        [ "im()", "function" ],
        [ "isinf()", "function" ],
        [ "isint()", "function" ],
        [ "isnan()", "function" ],
        [ "isnormal()", "function" ],
        [ "j0()", "function" ],
        [ "j1()", "function" ],
        [ "jacobi()", "function" ],
        [ "jtheta()", "function" ],
        [ "kei()", "function" ],
        [ "ker()", "function" ],
        [ "kfrom()", "function" ],
        [ "kleinj()", "function" ],
        [ "laguerre()", "function" ],
        [ "lambertw()", "function" ],
        [ "ldexp()", "function" ],
        [ "legendre()", "function" ],
        [ "legenp()", "function" ],
        [ "legenq()", "function" ],
        [ "lerchphi()", "function" ],
        [ "li()", "function" ],
        [ "limit()", "function" ],
        [ "linspace()", "function" ],
        [ "ln()", "function" ],
        [ "log()", "function" ],
        [ "log10()", "function" ],
        [ "loggamma()", "function" ],
        [ "logm()", "function" ],
        [ "lommels1()", "function" ],
        [ "lommels2()", "function" ],
        [ "mag()", "function" ],
        [ "mangoldt()", "function" ],
        [ "maxcalls()", "function" ],
        [ "meijerg()", "function" ],
        [ "memoize()", "function" ],
        [ "mfrom()", "function" ],
        [ "mnorm()", "function" ],
        [ "monitor()", "function" ],
        [ "mpmathify()", "function" ],
        [ "ncdf()", "function" ],
        [ "nint()", "function" ],
        [ "nint_distance()", "function" ],
        [ "norm()", "function" ],
        [ "npdf()", "function" ],
        [ "nprint()", "function" ],
        [ "nprod()", "function" ],
        [ "nstr()", "function" ],
        [ "nsum()", "function" ],
        [ "nzeros()", "function" ],
        [ "odefun()", "function" ],
        [ "pade()", "function" ],
        [ "pcfd()", "function" ],
        [ "pcfu()", "function" ],
        [ "pcfv()", "function" ],
        [ "pcfw()", "function" ],
        [ "plot()", "function" ],
        [ "polar()", "function" ],
        [ "polyexp()", "function" ],
        [ "polylog()", "function" ],
        [ "polyroots()", "function" ],
        [ "polyval()", "function" ],
        [ "power()", "function" ],
        [ "powm()", "function" ],
        [ "powm1()", "function" ],
        [ "primepi()", "function" ],
        [ "primepi2()", "function" ],
        [ "primezeta()", "function" ],
        [ "psi()", "function" ],
        [ "pslq()", "function" ],
        [ "qbarfrom()", "function" ],
        [ "qfac()", "function" ],
        [ "qfrom()", "function" ],
        [ "qgamma()", "function" ],
        [ "qhyper()", "function" ],
        [ "qp()", "function" ],
        [ "quad()", "function" ],
        [ "quadosc()", "function" ],
        [ "radians()", "function" ],
        [ "rand()", "function" ],
        [ "re()", "function" ],
        [ "rect()", "function" ],
        [ "rf()", "function" ],
        [ "rgamma()", "function" ],
        [ "richardson()", "function" ],
        [ "riemannr()", "function" ],
        [ "root()", "function" ],
        [ "scorergi()", "function" ],
        [ "scorerhi()", "function" ],
        [ "sec()", "function" ],
        [ "sech()", "function" ],
        [ "secondzeta()", "function" ],
        [ "shanks()", "function" ],
        [ "shi()", "function" ],
        [ "si()", "function" ],
        [ "siegeltheta()", "function" ],
        [ "siegelz()", "function" ],
        [ "sign()", "function" ],
        [ "sin()", "function" ],
        [ "sinc()", "function" ],
        [ "sincpi()", "function" ],
        [ "sinh()", "function" ],
        [ "sinm()", "function" ],
        [ "sinpi()", "function" ],
        [ "spherharm()", "function" ],
        [ "splot()", "function" ],
        [ "sqrt()", "function" ],
        [ "sqrtm()", "function" ],
        [ "stieltjes()", "function" ],
        [ "struveh()", "function" ],
        [ "struvel()", "function" ],
        [ "sumap()", "function" ],
        [ "sumem()", "function" ],
        [ "superfac()", "function" ],
        [ "tan()", "function" ],
        [ "tanh()", "function" ],
        [ "taufrom()", "function" ],
        [ "taylor()", "function" ],
        [ "timing()", "function" ],
        [ "unitroots()", "function" ],
        [ "webere()", "function" ],
        [ "whitm()", "function" ],
        [ "whitw()", "function" ],
        [ "workdps()", "function" ],
        [ "workprec()", "function" ],
        [ "zeta()", "function" ],
        [ "zetazero()", "function" ]
    ],
    "multifile": [
        [ "MultiFile", "class" ]
    ],
    "mutex": [
        [ "mutex", "class" ]
    ],
    "ndarray": [
        [ "__array_finalize__", "attribute" ],
        [ "__array_priority__", "attribute" ],
        [ "__array_wrap__", "attribute" ]
    ],
    "netrc": [
        [ "NetrcParseError", "exception" ],
        [ "netrc", "class" ]
    ],
    "new": [
        [ "classobj()", "function" ],
        [ "code()", "function" ],
        [ "function()", "function" ],
        [ "instance()", "function" ],
        [ "instancemethod()", "function" ],
        [ "module()", "function" ]
    ],
    "nntplib": [
        [ "NNTP", "class" ],
        [ "NNTPDataError", "exception" ],
        [ "NNTPError", "exception" ],
        [ "NNTPPermanentError", "exception" ],
        [ "NNTPProtocolError", "exception" ],
        [ "NNTPReplyError", "exception" ],
        [ "NNTPTemporaryError", "exception" ]
    ],
    "notification": [
        [ "cancel()", "function" ],
        [ "cancel_all()", "function" ],
        [ "get_scheduled()", "function" ],
        [ "schedule()", "function" ]
    ],
    "numbers": [
        [ "Complex", "class" ],
        [ "Integral", "class" ],
        [ "Number", "class" ],
        [ "Rational", "class" ],
        [ "Real", "class" ]
    ],
    "numpy": [
        [ "DataSource", "class" ],
        [ "MachAr", "class" ],
        [ "RankWarning", "exception" ],
        [ "__array__()", "function" ],
        [ "__array_finalize__()", "function" ],
        [ "__array_prepare__()", "function" ],
        [ "__array_priority__", "data" ],
        [ "__array_wrap__()", "function" ],
        [ "absolute", "data" ],
        [ "add", "data" ],
        [ "all()", "function" ],
        [ "allclose()", "function" ],
        [ "alterdot()", "function" ],
        [ "amax()", "function" ],
        [ "amin()", "function" ],
        [ "angle()", "function" ],
        [ "any()", "function" ],
        [ "append()", "function" ],
        [ "apply_along_axis()", "function" ],
        [ "apply_over_axes()", "function" ],
        [ "arange()", "function" ],
        [ "arccos", "data" ],
        [ "arccosh", "data" ],
        [ "arcsin", "data" ],
        [ "arcsinh", "data" ],
        [ "arctan", "data" ],
        [ "arctan2", "data" ],
        [ "arctanh", "data" ],
        [ "argmax()", "function" ],
        [ "argmin()", "function" ],
        [ "argpartition()", "function" ],
        [ "argsort()", "function" ],
        [ "argwhere()", "function" ],
        [ "around()", "function" ],
        [ "array()", "function" ],
        [ "array_equal()", "function" ],
        [ "array_equiv()", "function" ],
        [ "array_repr()", "function" ],
        [ "array_split()", "function" ],
        [ "array_str()", "function" ],
        [ "asanyarray()", "function" ],
        [ "asarray()", "function" ],
        [ "ascontiguousarray()", "function" ],
        [ "asfarray()", "function" ],
        [ "asfortranarray()", "function" ],
        [ "asmatrix()", "function" ],
        [ "asscalar()", "function" ],
        [ "atleast_1d()", "function" ],
        [ "atleast_2d()", "function" ],
        [ "atleast_3d()", "function" ],
        [ "average()", "function" ],
        [ "bartlett()", "function" ],
        [ "base_repr()", "function" ],
        [ "binary_repr()", "function" ],
        [ "bincount()", "function" ],
        [ "bitwise_and", "data" ],
        [ "bitwise_or", "data" ],
        [ "bitwise_xor", "data" ],
        [ "blackman()", "function" ],
        [ "bmat()", "function" ],
        [ "broadcast", "class" ],
        [ "broadcast_arrays()", "function" ],
        [ "busday_count()", "function" ],
        [ "busday_offset()", "function" ],
        [ "busdaycalendar", "class" ],
        [ "c_", "data" ],
        [ "can_cast()", "function" ],
        [ "ceil", "data" ],
        [ "chararray", "class" ],
        [ "choose()", "function" ],
        [ "clip()", "function" ],
        [ "column_stack()", "function" ],
        [ "common_type()", "function" ],
        [ "compress()", "function" ],
        [ "concatenate()", "function" ],
        [ "conj", "data" ],
        [ "convolve()", "function" ],
        [ "copy()", "function" ],
        [ "copysign", "data" ],
        [ "copyto()", "function" ],
        [ "corrcoef()", "function" ],
        [ "correlate()", "function" ],
        [ "cos", "data" ],
        [ "cosh", "data" ],
        [ "count_nonzero()", "function" ],
        [ "cov()", "function" ],
        [ "cross()", "function" ],
        [ "cumprod()", "function" ],
        [ "cumsum()", "function" ],
        [ "deg2rad", "data" ],
        [ "degrees", "data" ],
        [ "delete()", "function" ],
        [ "diag()", "function" ],
        [ "diag_indices()", "function" ],
        [ "diag_indices_from()", "function" ],
        [ "diagflat()", "function" ],
        [ "diagonal()", "function" ],
        [ "diff()", "function" ],
        [ "digitize()", "function" ],
        [ "distutils", "mod" ],
        [ "divide", "data" ],
        [ "dot()", "function" ],
        [ "dsplit()", "function" ],
        [ "dstack()", "function" ],
        [ "dtype", "class" ],
        [ "dual", "mod" ],
        [ "ediff1d()", "function" ],
        [ "einsum()", "function" ],
        [ "empty()", "function" ],
        [ "empty_like()", "function" ],
        [ "equal", "data" ],
        [ "errstate", "class" ],
        [ "exp", "data" ],
        [ "exp2", "data" ],
        [ "expand_dims()", "function" ],
        [ "expm1", "data" ],
        [ "extract()", "function" ],
        [ "eye()", "function" ],
        [ "fabs", "data" ],
        [ "fft", "mod" ],
        [ "fill_diagonal()", "function" ],
        [ "find_common_type()", "function" ],
        [ "finfo", "class" ],
        [ "fix()", "function" ],
        [ "flatiter", "class" ],
        [ "flatnonzero()", "function" ],
        [ "fliplr()", "function" ],
        [ "flipud()", "function" ],
        [ "floor", "data" ],
        [ "floor_divide", "data" ],
        [ "fmax", "data" ],
        [ "fmin", "data" ],
        [ "fmod", "data" ],
        [ "format_parser", "class" ],
        [ "frexp", "data" ],
        [ "frombuffer()", "function" ],
        [ "fromfile()", "function" ],
        [ "fromfunction()", "function" ],
        [ "fromiter()", "function" ],
        [ "frompyfunc()", "function" ],
        [ "fromregex()", "function" ],
        [ "fromstring()", "function" ],
        [ "fv()", "function" ],
        [ "generic", "class" ],
        [ "genfromtxt()", "function" ],
        [ "get_printoptions()", "function" ],
        [ "getbuffer()", "function" ],
        [ "getbufsize()", "function" ],
        [ "geterr()", "function" ],
        [ "geterrcall()", "function" ],
        [ "geterrobj()", "function" ],
        [ "gradient()", "function" ],
        [ "greater", "data" ],
        [ "greater_equal", "data" ],
        [ "hamming()", "function" ],
        [ "hanning()", "function" ],
        [ "histogram()", "function" ],
        [ "histogram2d()", "function" ],
        [ "histogramdd()", "function" ],
        [ "hsplit()", "function" ],
        [ "hstack()", "function" ],
        [ "hypot", "data" ],
        [ "i0()", "function" ],
        [ "identity()", "function" ],
        [ "iinfo", "class" ],
        [ "imag()", "function" ],
        [ "in1d()", "function" ],
        [ "indices()", "function" ],
        [ "info()", "function" ],
        [ "inner()", "function" ],
        [ "insert()", "function" ],
        [ "interp()", "function" ],
        [ "intersect1d()", "function" ],
        [ "invert", "data" ],
        [ "ipmt()", "function" ],
        [ "irr()", "function" ],
        [ "is_busday()", "function" ],
        [ "isclose()", "function" ],
        [ "iscomplex()", "function" ],
        [ "iscomplexobj()", "function" ],
        [ "isfinite", "data" ],
        [ "isfortran()", "function" ],
        [ "isinf", "data" ],
        [ "isnan", "data" ],
        [ "isneginf()", "function" ],
        [ "isposinf()", "function" ],
        [ "isreal()", "function" ],
        [ "isrealobj()", "function" ],
        [ "isscalar()", "function" ],
        [ "issctype()", "function" ],
        [ "issubclass_()", "function" ],
        [ "issubdtype()", "function" ],
        [ "issubsctype()", "function" ],
        [ "ix_()", "function" ],
        [ "kaiser()", "function" ],
        [ "kron()", "function" ],
        [ "ldexp", "data" ],
        [ "left_shift", "data" ],
        [ "less", "data" ],
        [ "less_equal", "data" ],
        [ "lexsort()", "function" ],
        [ "linspace()", "function" ],
        [ "load()", "function" ],
        [ "loadtxt()", "function" ],
        [ "log", "data" ],
        [ "log10", "data" ],
        [ "log1p", "data" ],
        [ "log2", "data" ],
        [ "logaddexp", "data" ],
        [ "logaddexp2", "data" ],
        [ "logical_and", "data" ],
        [ "logical_not", "data" ],
        [ "logical_or", "data" ],
        [ "logical_xor", "data" ],
        [ "logspace()", "function" ],
        [ "lookfor()", "function" ],
        [ "mask_indices()", "function" ],
        [ "mat()", "function" ],
        [ "matrix", "class" ],
        [ "maximum", "data" ],
        [ "mean()", "function" ],
        [ "median()", "function" ],
        [ "memmap", "class" ],
        [ "meshgrid()", "function" ],
        [ "mgrid", "data" ],
        [ "min_scalar_type()", "function" ],
        [ "minimum", "data" ],
        [ "mintypecode()", "function" ],
        [ "mirr()", "function" ],
        [ "mod", "data" ],
        [ "modf", "data" ],
        [ "msort()", "function" ],
        [ "multiply", "data" ],
        [ "nan_to_num()", "function" ],
        [ "nanargmax()", "function" ],
        [ "nanargmin()", "function" ],
        [ "nanmax()", "function" ],
        [ "nanmean()", "function" ],
        [ "nanmin()", "function" ],
        [ "nanstd()", "function" ],
        [ "nansum()", "function" ],
        [ "nanvar()", "function" ],
        [ "ndarray", "class" ],
        [ "ndenumerate", "class" ],
        [ "ndindex", "class" ],
        [ "nditer", "class" ],
        [ "negative", "data" ],
        [ "newaxis", "data" ],
        [ "newbuffer()", "function" ],
        [ "nonzero()", "function" ],
        [ "not_equal", "data" ],
        [ "nper()", "function" ],
        [ "npv()", "function" ],
        [ "numarray", "mod" ],
        [ "obj2sctype()", "function" ],
        [ "ogrid", "data" ],
        [ "oldnumeric", "mod" ],
        [ "ones()", "function" ],
        [ "ones_like()", "function" ],
        [ "outer()", "function" ],
        [ "packbits()", "function" ],
        [ "pad()", "function" ],
        [ "partition()", "function" ],
        [ "percentile()", "function" ],
        [ "piecewise()", "function" ],
        [ "place()", "function" ],
        [ "pmt()", "function" ],
        [ "poly()", "function" ],
        [ "poly1d", "class" ],
        [ "polyadd()", "function" ],
        [ "polyder()", "function" ],
        [ "polydiv()", "function" ],
        [ "polyfit()", "function" ],
        [ "polyint()", "function" ],
        [ "polymul()", "function" ],
        [ "polysub()", "function" ],
        [ "polyval()", "function" ],
        [ "power", "data" ],
        [ "ppmt()", "function" ],
        [ "prod()", "function" ],
        [ "promote_types()", "function" ],
        [ "ptp()", "function" ],
        [ "put()", "function" ],
        [ "putmask()", "function" ],
        [ "pv()", "function" ],
        [ "r_", "data" ],
        [ "rad2deg", "data" ],
        [ "radians", "data" ],
        [ "rate()", "function" ],
        [ "ravel()", "function" ],
        [ "ravel_multi_index()", "function" ],
        [ "real()", "function" ],
        [ "real_if_close()", "function" ],
        [ "recarray", "class" ],
        [ "reciprocal", "data" ],
        [ "record", "class" ],
        [ "remainder", "data" ],
        [ "repeat()", "function" ],
        [ "require()", "function" ],
        [ "reshape()", "function" ],
        [ "resize()", "function" ],
        [ "restoredot()", "function" ],
        [ "result_type()", "function" ],
        [ "right_shift", "data" ],
        [ "rint", "data" ],
        [ "roll()", "function" ],
        [ "rollaxis()", "function" ],
        [ "roots()", "function" ],
        [ "rot90()", "function" ],
        [ "round_()", "function" ],
        [ "s_", "data" ],
        [ "save()", "function" ],
        [ "savetxt()", "function" ],
        [ "savez()", "function" ],
        [ "savez_compressed()", "function" ],
        [ "sctype2char()", "function" ],
        [ "searchsorted()", "function" ],
        [ "select()", "function" ],
        [ "set_printoptions()", "function" ],
        [ "set_string_function()", "function" ],
        [ "setbufsize()", "function" ],
        [ "setdiff1d()", "function" ],
        [ "seterr()", "function" ],
        [ "seterrcall()", "function" ],
        [ "seterrobj()", "function" ],
        [ "setxor1d()", "function" ],
        [ "sign", "data" ],
        [ "signbit", "data" ],
        [ "sin", "data" ],
        [ "sinc()", "function" ],
        [ "sinh", "data" ],
        [ "sort()", "function" ],
        [ "sort_complex()", "function" ],
        [ "source()", "function" ],
        [ "split()", "function" ],
        [ "sqrt", "data" ],
        [ "square", "data" ],
        [ "squeeze()", "function" ],
        [ "std()", "function" ],
        [ "subtract", "data" ],
        [ "sum()", "function" ],
        [ "swapaxes()", "function" ],
        [ "take()", "function" ],
        [ "tan", "data" ],
        [ "tanh", "data" ],
        [ "tensordot()", "function" ],
        [ "tile()", "function" ],
        [ "trace()", "function" ],
        [ "transpose()", "function" ],
        [ "trapz()", "function" ],
        [ "tri()", "function" ],
        [ "tril()", "function" ],
        [ "tril_indices()", "function" ],
        [ "tril_indices_from()", "function" ],
        [ "trim_zeros()", "function" ],
        [ "triu()", "function" ],
        [ "triu_indices()", "function" ],
        [ "triu_indices_from()", "function" ],
        [ "true_divide", "data" ],
        [ "trunc", "data" ],
        [ "typename()", "function" ],
        [ "union1d()", "function" ],
        [ "unique()", "function" ],
        [ "unpackbits()", "function" ],
        [ "unravel_index()", "function" ],
        [ "unwrap()", "function" ],
        [ "vander()", "function" ],
        [ "var()", "function" ],
        [ "vdot()", "function" ],
        [ "vectorize", "class" ],
        [ "vsplit()", "function" ],
        [ "vstack()", "function" ],
        [ "where()", "function" ],
        [ "zeros()", "function" ],
        [ "zeros_like()", "function" ]
    ],
    "objc_util": [
        [ "CGAffineTransform", "class" ],
        [ "CGPoint", "class" ],
        [ "CGRect", "class" ],
        [ "CGSize", "class" ],
        [ "CGVector", "class" ],
        [ "NSArray", "class" ],
        [ "NSData", "class" ],
        [ "NSDictionary", "class" ],
        [ "NSEnumerator", "class" ],
        [ "NSMutableArray", "class" ],
        [ "NSMutableData", "class" ],
        [ "NSMutableDictionary", "class" ],
        [ "NSMutableSet", "class" ],
        [ "NSMutableString", "class" ],
        [ "NSNumber", "class" ],
        [ "NSRange", "class" ],
        [ "NSSet", "class" ],
        [ "NSString", "class" ],
        [ "NSURL", "class" ],
        [ "ObjCBlock", "class" ],
        [ "ObjCClass", "class" ],
        [ "ObjCInstance", "class" ],
        [ "UIEdgeInsets", "class" ],
        [ "create_objc_class()", "function" ],
        [ "ns()", "function" ],
        [ "nsdata_to_bytes()", "function" ],
        [ "nsurl()", "function" ],
        [ "on_main_thread()", "function" ],
        [ "sel()", "function" ],
        [ "uiimage_to_png()", "function" ]
    ],
    "object": [
        [ "__abs__", "method" ],
        [ "__add__", "method" ],
        [ "__and__", "method" ],
        [ "__call__", "method" ],
        [ "__cmp__", "method" ],
        [ "__coerce__", "method" ],
        [ "__complex__", "method" ],
        [ "__contains__", "method" ],
        [ "__del__", "method" ],
        [ "__delattr__", "method" ],
        [ "__delete__", "method" ],
        [ "__delitem__", "method" ],
        [ "__delslice__", "method" ],
        [ "__dict__", "attribute" ],
        [ "__div__", "method" ],
        [ "__divmod__", "method" ],
        [ "__enter__", "method" ],
        [ "__eq__", "method" ],
        [ "__exit__", "method" ],
        [ "__float__", "method" ],
        [ "__floordiv__", "method" ],
        [ "__ge__", "method" ],
        [ "__get__", "method" ],
        [ "__getattr__", "method" ],
        [ "__getattribute__", "method" ],
        [ "__getinitargs__", "method" ],
        [ "__getitem__", "method" ],
        [ "__getnewargs__", "method" ],
        [ "__getslice__", "method" ],
        [ "__getstate__", "method" ],
        [ "__gt__", "method" ],
        [ "__hash__", "method" ],
        [ "__hex__", "method" ],
        [ "__iadd__", "method" ],
        [ "__iand__", "method" ],
        [ "__idiv__", "method" ],
        [ "__ifloordiv__", "method" ],
        [ "__ilshift__", "method" ],
        [ "__imod__", "method" ],
        [ "__imul__", "method" ],
        [ "__index__", "method" ],
        [ "__init__", "method" ],
        [ "__int__", "method" ],
        [ "__invert__", "method" ],
        [ "__ior__", "method" ],
        [ "__ipow__", "method" ],
        [ "__irshift__", "method" ],
        [ "__isub__", "method" ],
        [ "__iter__", "method" ],
        [ "__itruediv__", "method" ],
        [ "__ixor__", "method" ],
        [ "__le__", "method" ],
        [ "__len__", "method" ],
        [ "__long__", "method" ],
        [ "__lshift__", "method" ],
        [ "__lt__", "method" ],
        [ "__members__", "attribute" ],
        [ "__methods__", "attribute" ],
        [ "__mod__", "method" ],
        [ "__mul__", "method" ],
        [ "__ne__", "method" ],
        [ "__neg__", "method" ],
        [ "__new__", "method" ],
        [ "__nonzero__", "method" ],
        [ "__oct__", "method" ],
        [ "__or__", "method" ],
        [ "__pos__", "method" ],
        [ "__pow__", "method" ],
        [ "__radd__", "method" ],
        [ "__rand__", "method" ],
        [ "__rcmp__", "method" ],
        [ "__rdiv__", "method" ],
        [ "__rdivmod__", "method" ],
        [ "__reduce__", "method" ],
        [ "__reduce_ex__", "method" ],
        [ "__repr__", "method" ],
        [ "__reversed__", "method" ],
        [ "__rfloordiv__", "method" ],
        [ "__rlshift__", "method" ],
        [ "__rmod__", "method" ],
        [ "__rmul__", "method" ],
        [ "__ror__", "method" ],
        [ "__rpow__", "method" ],
        [ "__rrshift__", "method" ],
        [ "__rshift__", "method" ],
        [ "__rsub__", "method" ],
        [ "__rtruediv__", "method" ],
        [ "__rxor__", "method" ],
        [ "__set__", "method" ],
        [ "__setattr__", "method" ],
        [ "__setitem__", "method" ],
        [ "__setslice__", "method" ],
        [ "__setstate__", "method" ],
        [ "__str__", "method" ],
        [ "__sub__", "method" ],
        [ "__truediv__", "method" ],
        [ "__unicode__", "method" ],
        [ "__xor__", "method" ]
    ],
    "operator": [
        [ "__abs__()", "function" ],
        [ "__add__()", "function" ],
        [ "__and__()", "function" ],
        [ "__concat__()", "function" ],
        [ "__contains__()", "function" ],
        [ "__delitem__()", "function" ],
        [ "__delslice__()", "function" ],
        [ "__div__()", "function" ],
        [ "__eq__()", "function" ],
        [ "__floordiv__()", "function" ],
        [ "__ge__()", "function" ],
        [ "__getitem__()", "function" ],
        [ "__getslice__()", "function" ],
        [ "__gt__()", "function" ],
        [ "__iadd__()", "function" ],
        [ "__iand__()", "function" ],
        [ "__iconcat__()", "function" ],
        [ "__idiv__()", "function" ],
        [ "__ifloordiv__()", "function" ],
        [ "__ilshift__()", "function" ],
        [ "__imod__()", "function" ],
        [ "__imul__()", "function" ],
        [ "__index__()", "function" ],
        [ "__inv__()", "function" ],
        [ "__invert__()", "function" ],
        [ "__ior__()", "function" ],
        [ "__ipow__()", "function" ],
        [ "__irepeat__()", "function" ],
        [ "__irshift__()", "function" ],
        [ "__isub__()", "function" ],
        [ "__itruediv__()", "function" ],
        [ "__ixor__()", "function" ],
        [ "__le__()", "function" ],
        [ "__lshift__()", "function" ],
        [ "__lt__()", "function" ],
        [ "__mod__()", "function" ],
        [ "__mul__()", "function" ],
        [ "__ne__()", "function" ],
        [ "__neg__()", "function" ],
        [ "__not__()", "function" ],
        [ "__or__()", "function" ],
        [ "__pos__()", "function" ],
        [ "__pow__()", "function" ],
        [ "__repeat__()", "function" ],
        [ "__rshift__()", "function" ],
        [ "__setitem__()", "function" ],
        [ "__setslice__()", "function" ],
        [ "__sub__()", "function" ],
        [ "__truediv__()", "function" ],
        [ "__xor__()", "function" ],
        [ "abs()", "function" ],
        [ "add()", "function" ],
        [ "and_()", "function" ],
        [ "attrgetter()", "function" ],
        [ "concat()", "function" ],
        [ "contains()", "function" ],
        [ "countOf()", "function" ],
        [ "delitem()", "function" ],
        [ "delslice()", "function" ],
        [ "div()", "function" ],
        [ "eq()", "function" ],
        [ "floordiv()", "function" ],
        [ "ge()", "function" ],
        [ "getitem()", "function" ],
        [ "getslice()", "function" ],
        [ "gt()", "function" ],
        [ "iadd()", "function" ],
        [ "iand()", "function" ],
        [ "iconcat()", "function" ],
        [ "idiv()", "function" ],
        [ "ifloordiv()", "function" ],
        [ "ilshift()", "function" ],
        [ "imod()", "function" ],
        [ "imul()", "function" ],
        [ "index()", "function" ],
        [ "indexOf()", "function" ],
        [ "inv()", "function" ],
        [ "invert()", "function" ],
        [ "ior()", "function" ],
        [ "ipow()", "function" ],
        [ "irepeat()", "function" ],
        [ "irshift()", "function" ],
        [ "isCallable()", "function" ],
        [ "isMappingType()", "function" ],
        [ "isNumberType()", "function" ],
        [ "isSequenceType()", "function" ],
        [ "is_()", "function" ],
        [ "is_not()", "function" ],
        [ "isub()", "function" ],
        [ "itemgetter()", "function" ],
        [ "itruediv()", "function" ],
        [ "ixor()", "function" ],
        [ "le()", "function" ],
        [ "lshift()", "function" ],
        [ "lt()", "function" ],
        [ "methodcaller()", "function" ],
        [ "mod()", "function" ],
        [ "mul()", "function" ],
        [ "ne()", "function" ],
        [ "neg()", "function" ],
        [ "not_()", "function" ],
        [ "or_()", "function" ],
        [ "pos()", "function" ],
        [ "pow()", "function" ],
        [ "repeat()", "function" ],
        [ "rshift()", "function" ],
        [ "sequenceIncludes()", "function" ],
        [ "setitem()", "function" ],
        [ "setslice()", "function" ],
        [ "sub()", "function" ],
        [ "truediv()", "function" ],
        [ "truth()", "function" ],
        [ "xor()", "function" ]
    ],
    "optparse": [
        [ "OptionGroup", "class" ],
        [ "OptionParser", "class" ]
    ],
    "os": [
        [ "EX_CANTCREAT", "data" ],
        [ "EX_CONFIG", "data" ],
        [ "EX_DATAERR", "data" ],
        [ "EX_IOERR", "data" ],
        [ "EX_NOHOST", "data" ],
        [ "EX_NOINPUT", "data" ],
        [ "EX_NOPERM", "data" ],
        [ "EX_NOTFOUND", "data" ],
        [ "EX_NOUSER", "data" ],
        [ "EX_OK", "data" ],
        [ "EX_OSERR", "data" ],
        [ "EX_OSFILE", "data" ],
        [ "EX_PROTOCOL", "data" ],
        [ "EX_SOFTWARE", "data" ],
        [ "EX_TEMPFAIL", "data" ],
        [ "EX_UNAVAILABLE", "data" ],
        [ "EX_USAGE", "data" ],
        [ "F_OK", "data" ],
        [ "O_APPEND", "data" ],
        [ "O_ASYNC", "data" ],
        [ "O_BINARY", "data" ],
        [ "O_CREAT", "data" ],
        [ "O_DIRECT", "data" ],
        [ "O_DIRECTORY", "data" ],
        [ "O_DSYNC", "data" ],
        [ "O_EXCL", "data" ],
        [ "O_EXLOCK", "data" ],
        [ "O_NDELAY", "data" ],
        [ "O_NOATIME", "data" ],
        [ "O_NOCTTY", "data" ],
        [ "O_NOFOLLOW", "data" ],
        [ "O_NOINHERIT", "data" ],
        [ "O_NONBLOCK", "data" ],
        [ "O_RANDOM", "data" ],
        [ "O_RDONLY", "data" ],
        [ "O_RDWR", "data" ],
        [ "O_RSYNC", "data" ],
        [ "O_SEQUENTIAL", "data" ],
        [ "O_SHLOCK", "data" ],
        [ "O_SHORT_LIVED", "data" ],
        [ "O_SYNC", "data" ],
        [ "O_TEMPORARY", "data" ],
        [ "O_TEXT", "data" ],
        [ "O_TRUNC", "data" ],
        [ "O_WRONLY", "data" ],
        [ "P_DETACH", "data" ],
        [ "P_NOWAIT", "data" ],
        [ "P_NOWAITO", "data" ],
        [ "P_OVERLAY", "data" ],
        [ "P_WAIT", "data" ],
        [ "R_OK", "data" ],
        [ "SEEK_CUR", "data" ],
        [ "SEEK_END", "data" ],
        [ "SEEK_SET", "data" ],
        [ "TMP_MAX", "data" ],
        [ "WCONTINUED", "data" ],
        [ "WCOREDUMP()", "function" ],
        [ "WEXITSTATUS()", "function" ],
        [ "WIFCONTINUED()", "function" ],
        [ "WIFEXITED()", "function" ],
        [ "WIFSIGNALED()", "function" ],
        [ "WIFSTOPPED()", "function" ],
        [ "WNOHANG", "data" ],
        [ "WSTOPSIG()", "function" ],
        [ "WTERMSIG()", "function" ],
        [ "WUNTRACED", "data" ],
        [ "W_OK", "data" ],
        [ "X_OK", "data" ],
        [ "_exit()", "function" ],
        [ "abort()", "function" ],
        [ "access()", "function" ],
        [ "altsep", "data" ],
        [ "chdir()", "function" ],
        [ "chflags()", "function" ],
        [ "chmod()", "function" ],
        [ "chown()", "function" ],
        [ "chroot()", "function" ],
        [ "close()", "function" ],
        [ "closerange()", "function" ],
        [ "confstr()", "function" ],
        [ "confstr_names", "data" ],
        [ "ctermid()", "function" ],
        [ "curdir", "data" ],
        [ "defpath", "data" ],
        [ "devnull", "data" ],
        [ "dup()", "function" ],
        [ "dup2()", "function" ],
        [ "environ", "data" ],
        [ "error", "exception" ],
        [ "execl()", "function" ],
        [ "execle()", "function" ],
        [ "execlp()", "function" ],
        [ "execlpe()", "function" ],
        [ "execv()", "function" ],
        [ "execve()", "function" ],
        [ "execvp()", "function" ],
        [ "execvpe()", "function" ],
        [ "extsep", "data" ],
        [ "fchdir()", "function" ],
        [ "fchmod()", "function" ],
        [ "fchown()", "function" ],
        [ "fdatasync()", "function" ],
        [ "fdopen()", "function" ],
        [ "fork()", "function" ],
        [ "forkpty()", "function" ],
        [ "fpathconf()", "function" ],
        [ "fstat()", "function" ],
        [ "fstatvfs()", "function" ],
        [ "fsync()", "function" ],
        [ "ftruncate()", "function" ],
        [ "getcwd()", "function" ],
        [ "getcwdu()", "function" ],
        [ "getegid()", "function" ],
        [ "getenv()", "function" ],
        [ "geteuid()", "function" ],
        [ "getgid()", "function" ],
        [ "getgroups()", "function" ],
        [ "getloadavg()", "function" ],
        [ "getlogin()", "function" ],
        [ "getpgid()", "function" ],
        [ "getpgrp()", "function" ],
        [ "getpid()", "function" ],
        [ "getppid()", "function" ],
        [ "getresgid()", "function" ],
        [ "getresuid()", "function" ],
        [ "getsid()", "function" ],
        [ "getuid()", "function" ],
        [ "initgroups()", "function" ],
        [ "isatty()", "function" ],
        [ "kill()", "function" ],
        [ "killpg()", "function" ],
        [ "lchflags()", "function" ],
        [ "lchmod()", "function" ],
        [ "lchown()", "function" ],
        [ "linesep", "data" ],
        [ "link()", "function" ],
        [ "listdir()", "function" ],
        [ "lseek()", "function" ],
        [ "lstat()", "function" ],
        [ "major()", "function" ],
        [ "makedev()", "function" ],
        [ "makedirs()", "function" ],
        [ "minor()", "function" ],
        [ "mkdir()", "function" ],
        [ "mkfifo()", "function" ],
        [ "mknod()", "function" ],
        [ "name", "data" ],
        [ "nice()", "function" ],
        [ "open()", "function" ],
        [ "openpty()", "function" ],
        [ "pardir", "data" ],
        [ "path", "mod" ],
        [ "pathconf()", "function" ],
        [ "pathconf_names", "data" ],
        [ "pathsep", "data" ],
        [ "pipe()", "function" ],
        [ "plock()", "function" ],
        [ "popen()", "function" ],
        [ "popen2()", "function" ],
        [ "popen3()", "function" ],
        [ "popen4()", "function" ],
        [ "putenv()", "function" ],
        [ "read()", "function" ],
        [ "readlink()", "function" ],
        [ "remove()", "function" ],
        [ "removedirs()", "function" ],
        [ "rename()", "function" ],
        [ "renames()", "function" ],
        [ "rmdir()", "function" ],
        [ "sep", "data" ],
        [ "setegid()", "function" ],
        [ "seteuid()", "function" ],
        [ "setgid()", "function" ],
        [ "setgroups()", "function" ],
        [ "setpgid()", "function" ],
        [ "setpgrp()", "function" ],
        [ "setregid()", "function" ],
        [ "setresgid()", "function" ],
        [ "setresuid()", "function" ],
        [ "setreuid()", "function" ],
        [ "setsid()", "function" ],
        [ "setuid()", "function" ],
        [ "spawnl()", "function" ],
        [ "spawnle()", "function" ],
        [ "spawnlp()", "function" ],
        [ "spawnlpe()", "function" ],
        [ "spawnv()", "function" ],
        [ "spawnve()", "function" ],
        [ "spawnvp()", "function" ],
        [ "spawnvpe()", "function" ],
        [ "startfile()", "function" ],
        [ "stat()", "function" ],
        [ "stat_float_times()", "function" ],
        [ "statvfs()", "function" ],
        [ "strerror()", "function" ],
        [ "symlink()", "function" ],
        [ "sysconf()", "function" ],
        [ "sysconf_names", "data" ],
        [ "system()", "function" ],
        [ "tcgetpgrp()", "function" ],
        [ "tcsetpgrp()", "function" ],
        [ "tempnam()", "function" ],
        [ "times()", "function" ],
        [ "tmpfile()", "function" ],
        [ "tmpnam()", "function" ],
        [ "ttyname()", "function" ],
        [ "umask()", "function" ],
        [ "uname()", "function" ],
        [ "unlink()", "function" ],
        [ "unsetenv()", "function" ],
        [ "urandom()", "function" ],
        [ "utime()", "function" ],
        [ "wait()", "function" ],
        [ "wait3()", "function" ],
        [ "wait4()", "function" ],
        [ "waitpid()", "function" ],
        [ "walk()", "function" ],
        [ "write()", "function" ]
    ],
    "paramiko": [
        [ "Agent", "class" ],
        [ "AgentKey", "class" ],
        [ "AutoAddPolicy", "class" ],
        [ "BadAuthenticationType", "class" ],
        [ "BadHostKeyException", "class" ],
        [ "BufferedFile", "class" ],
        [ "Channel", "class" ],
        [ "ChannelException", "class" ],
        [ "DSSKey", "class" ],
        [ "HostKeys", "class" ],
        [ "Message", "class" ],
        [ "MissingHostKeyPolicy", "class" ],
        [ "PKey", "class" ],
        [ "PasswordRequiredException", "class" ],
        [ "RSAKey", "class" ],
        [ "RejectPolicy", "class" ],
        [ "SFTP", "class" ],
        [ "SFTPAttributes", "class" ],
        [ "SFTPClient", "class" ],
        [ "SFTPError", "class" ],
        [ "SFTPFile", "class" ],
        [ "SFTPHandle", "class" ],
        [ "SFTPServer", "class" ],
        [ "SFTPServerInterface", "class" ],
        [ "SSHClient", "class" ],
        [ "SSHConfig", "class" ],
        [ "SSHException", "class" ],
        [ "SecurityOptions", "class" ],
        [ "ServerInterface", "class" ],
        [ "SubsystemHandler", "class" ],
        [ "Transport", "class" ],
        [ "WarningPolicy", "class" ]
    ],
    "parser": [
        [ "ParserError", "exception" ],
        [ "STType", "data" ],
        [ "compilest()", "function" ],
        [ "expr()", "function" ],
        [ "isexpr()", "function" ],
        [ "issuite()", "function" ],
        [ "sequence2st()", "function" ],
        [ "st2list()", "function" ],
        [ "st2tuple()", "function" ],
        [ "suite()", "function" ],
        [ "tuple2st()", "function" ]
    ],
    "pdb": [
        [ "Pdb", "class" ],
        [ "pm()", "function" ],
        [ "post_mortem()", "function" ],
        [ "run()", "function" ],
        [ "runcall()", "function" ],
        [ "runeval()", "function" ],
        [ "set_trace()", "function" ]
    ],
    "photos": [
        [ "Asset", "class" ],
        [ "AssetCollection", "class" ],
        [ "batch_delete()", "function" ],
        [ "batch_revert()", "function" ],
        [ "capture_image()", "function" ],
        [ "create_album()", "function" ],
        [ "create_image_asset()", "function" ],
        [ "get_albums()", "function" ],
        [ "get_asset_with_local_id()", "function" ],
        [ "get_assets()", "function" ],
        [ "get_favorites_album()", "function" ],
        [ "get_moments()", "function" ],
        [ "get_recently_added_album()", "function" ],
        [ "get_screenshots_album()", "function" ],
        [ "get_selfies_album()", "function" ],
        [ "get_smart_albums()", "function" ],
        [ "pick_asset()", "function" ]
    ],
    "pickle": [
        [ "HIGHEST_PROTOCOL", "data" ],
        [ "PickleError", "exception" ],
        [ "Pickler", "class" ],
        [ "PicklingError", "exception" ],
        [ "Unpickler", "class" ],
        [ "UnpicklingError", "exception" ],
        [ "dump()", "function" ],
        [ "dumps()", "function" ],
        [ "load()", "function" ],
        [ "loads()", "function" ]
    ],
    "pickletools": [
        [ "dis()", "function" ],
        [ "genops()", "function" ],
        [ "optimize()", "function" ]
    ],
    "pipes": [
        [ "Template", "class" ],
        [ "quote()", "function" ]
    ],
    "pkgutil": [
        [ "ImpImporter", "class" ],
        [ "ImpLoader", "class" ],
        [ "extend_path()", "function" ],
        [ "find_loader()", "function" ],
        [ "get_data()", "function" ],
        [ "get_importer()", "function" ],
        [ "get_loader()", "function" ],
        [ "iter_importers()", "function" ],
        [ "iter_modules()", "function" ],
        [ "walk_packages()", "function" ]
    ],
    "platform": [
        [ "architecture()", "function" ],
        [ "dist()", "function" ],
        [ "java_ver()", "function" ],
        [ "libc_ver()", "function" ],
        [ "linux_distribution()", "function" ],
        [ "mac_ver()", "function" ],
        [ "machine()", "function" ],
        [ "node()", "function" ],
        [ "platform()", "function" ],
        [ "popen()", "function" ],
        [ "processor()", "function" ],
        [ "python_branch()", "function" ],
        [ "python_build()", "function" ],
        [ "python_compiler()", "function" ],
        [ "python_implementation()", "function" ],
        [ "python_revision()", "function" ],
        [ "python_version()", "function" ],
        [ "python_version_tuple()", "function" ],
        [ "release()", "function" ],
        [ "system()", "function" ],
        [ "system_alias()", "function" ],
        [ "uname()", "function" ],
        [ "version()", "function" ],
        [ "win32_ver()", "function" ]
    ],
    "plistlib": [
        [ "Data", "class" ],
        [ "readPlist()", "function" ],
        [ "readPlistFromResource()", "function" ],
        [ "readPlistFromString()", "function" ],
        [ "writePlist()", "function" ],
        [ "writePlistToResource()", "function" ],
        [ "writePlistToString()", "function" ]
    ],
    "popen2": [
        [ "Popen3", "class" ],
        [ "Popen4", "class" ],
        [ "popen2()", "function" ],
        [ "popen3()", "function" ],
        [ "popen4()", "function" ]
    ],
    "poplib": [
        [ "POP3", "class" ],
        [ "POP3_SSL", "class" ],
        [ "error_proto", "exception" ]
    ],
    "posix": [
        [ "environ", "data" ]
    ],
    "posixfile": [
        [ "SEEK_CUR", "data" ],
        [ "SEEK_END", "data" ],
        [ "SEEK_SET", "data" ],
        [ "fileopen()", "function" ],
        [ "open()", "function" ]
    ],
    "pprint": [
        [ "PrettyPrinter", "class" ],
        [ "isreadable()", "function" ],
        [ "isrecursive()", "function" ],
        [ "pformat()", "function" ],
        [ "pprint()", "function" ],
        [ "saferepr()", "function" ]
    ],
    "pstats": [
        [ "Stats", "class" ]
    ],
    "pwd": [
        [ "getpwall()", "function" ],
        [ "getpwnam()", "function" ],
        [ "getpwuid()", "function" ]
    ],
    "py_compile": [
        [ "PyCompileError", "exception" ],
        [ "compile()", "function" ],
        [ "main()", "function" ]
    ],
    "pyclbr": [
        [ "readmodule()", "function" ],
        [ "readmodule_ex()", "function" ]
    ],
    "qrcode": [
        [ "QRCode", "class" ],
        [ "make()", "function" ]
    ],
    "quopri": [
        [ "decode()", "function" ],
        [ "decodestring()", "function" ],
        [ "encode()", "function" ],
        [ "encodestring()", "function" ]
    ],
    "random": [
        [ "SystemRandom", "class" ],
        [ "WichmannHill", "class" ],
        [ "betavariate()", "function" ],
        [ "choice()", "function" ],
        [ "expovariate()", "function" ],
        [ "gammavariate()", "function" ],
        [ "gauss()", "function" ],
        [ "getrandbits()", "function" ],
        [ "getstate()", "function" ],
        [ "jumpahead()", "function" ],
        [ "lognormvariate()", "function" ],
        [ "normalvariate()", "function" ],
        [ "paretovariate()", "function" ],
        [ "randint()", "function" ],
        [ "random()", "function" ],
        [ "randrange()", "function" ],
        [ "sample()", "function" ],
        [ "seed()", "function" ],
        [ "setstate()", "function" ],
        [ "shuffle()", "function" ],
        [ "triangular()", "function" ],
        [ "uniform()", "function" ],
        [ "vonmisesvariate()", "function" ],
        [ "weibullvariate()", "function" ],
        [ "whseed()", "function" ]
    ],
    "re": [
        [ "DEBUG", "data" ],
        [ "DOTALL", "data" ],
        [ "I", "data" ],
        [ "IGNORECASE", "data" ],
        [ "L", "data" ],
        [ "LOCALE", "data" ],
        [ "M", "data" ],
        [ "MULTILINE", "data" ],
        [ "MatchObject", "class" ],
        [ "RegexObject", "class" ],
        [ "S", "data" ],
        [ "U", "data" ],
        [ "UNICODE", "data" ],
        [ "VERBOSE", "data" ],
        [ "X", "data" ],
        [ "compile()", "function" ],
        [ "error", "exception" ],
        [ "escape()", "function" ],
        [ "findall()", "function" ],
        [ "finditer()", "function" ],
        [ "match()", "function" ],
        [ "purge()", "function" ],
        [ "search()", "function" ],
        [ "split()", "function" ],
        [ "sub()", "function" ],
        [ "subn()", "function" ]
    ],
    "reminders": [
        [ "Alarm", "class" ],
        [ "Calendar", "class" ],
        [ "Reminder", "class" ],
        [ "delete_calendar()", "function" ],
        [ "delete_reminder()", "function" ],
        [ "get_all_calendars()", "function" ],
        [ "get_calendar()", "function" ],
        [ "get_default_calendar()", "function" ],
        [ "get_reminders()", "function" ]
    ],
    "repr": [
        [ "Repr", "class" ],
        [ "aRepr", "data" ],
        [ "repr()", "function" ]
    ],
    "requests": [
        [ "ConnectionError", "exception" ],
        [ "HTTPError", "exception" ],
        [ "Request", "class" ],
        [ "RequestException", "exception" ],
        [ "Response", "class" ],
        [ "Session", "class" ],
        [ "TooManyRedirects", "exception" ],
        [ "URLRequired", "exception" ],
        [ "delete()", "function" ],
        [ "get()", "function" ],
        [ "head()", "function" ],
        [ "patch()", "function" ],
        [ "post()", "function" ],
        [ "put()", "function" ],
        [ "request()", "function" ],
        [ "session()", "function" ]
    ],
    "rexec": [
        [ "RExec", "class" ]
    ],
    "rfc822": [
        [ "AddressList", "class" ],
        [ "Message", "class" ],
        [ "dump_address_pair()", "function" ],
        [ "mktime_tz()", "function" ],
        [ "parseaddr()", "function" ],
        [ "parsedate()", "function" ],
        [ "parsedate_tz()", "function" ],
        [ "quote()", "function" ],
        [ "unquote()", "function" ]
    ],
    "robotparser": [
        [ "RobotFileParser", "class" ]
    ],
    "runpy": [
        [ "run_module()", "function" ],
        [ "run_path()", "function" ]
    ],
    "scene": [
        [ "Action", "class" ],
        [ "BLEND_ADD", "data" ],
        [ "BLEND_MULTIPLY", "data" ],
        [ "BLEND_NORMAL", "data" ],
        [ "DEFAULT_ORIENTATION", "data" ],
        [ "EffectNode", "class" ],
        [ "FILTERING_LINEAR", "data" ],
        [ "FILTERING_NEAREST", "data" ],
        [ "LANDSCAPE", "data" ],
        [ "LabelNode", "class" ],
        [ "Node", "class" ],
        [ "PORTRAIT", "data" ],
        [ "Point", "class" ],
        [ "Rect", "class" ],
        [ "Scene", "class" ],
        [ "SceneView", "class" ],
        [ "Shader", "class" ],
        [ "ShapeNode", "class" ],
        [ "Size", "class" ],
        [ "SpriteNode", "class" ],
        [ "TIMING_BOUNCE_IN", "data" ],
        [ "TIMING_BOUNCE_IN_OUT", "data" ],
        [ "TIMING_BOUNCE_OUT", "data" ],
        [ "TIMING_EASE_BACK_IN", "data" ],
        [ "TIMING_EASE_BACK_IN_OUT", "data" ],
        [ "TIMING_EASE_BACK_OUT", "data" ],
        [ "TIMING_EASE_IN", "data" ],
        [ "TIMING_EASE_IN_2", "data" ],
        [ "TIMING_EASE_IN_OUT", "data" ],
        [ "TIMING_EASE_OUT", "data" ],
        [ "TIMING_EASE_OUT_2", "data" ],
        [ "TIMING_ELASTIC_IN", "data" ],
        [ "TIMING_ELASTIC_IN_OUT", "data" ],
        [ "TIMING_ELASTIC_OUT", "data" ],
        [ "TIMING_LINEAR", "data" ],
        [ "TIMING_SINODIAL", "data" ],
        [ "Texture", "class" ],
        [ "Touch", "class" ],
        [ "Vector2", "class" ],
        [ "bounds", "attribute" ],
        [ "get_controllers()", "function" ],
        [ "get_image_path()", "function" ],
        [ "get_screen_scale()", "function" ],
        [ "get_screen_size()", "function" ],
        [ "gravity()", "function" ],
        [ "run()", "function" ]
    ],
    "scene_drawing": [
        [ "background()", "function" ],
        [ "blend_mode()", "function" ],
        [ "ellipse()", "function" ],
        [ "fill()", "function" ],
        [ "image()", "function" ],
        [ "image_quad()", "function" ],
        [ "line()", "function" ],
        [ "load_image()", "function" ],
        [ "load_image_file()", "function" ],
        [ "load_pil_image()", "function" ],
        [ "no_fill()", "function" ],
        [ "no_stroke()", "function" ],
        [ "no_tint()", "function" ],
        [ "pop_matrix()", "function" ],
        [ "push_matrix()", "function" ],
        [ "rect()", "function" ],
        [ "render_text()", "function" ],
        [ "rotate()", "function" ],
        [ "scale()", "function" ],
        [ "stroke()", "function" ],
        [ "stroke_weight()", "function" ],
        [ "text()", "function" ],
        [ "tint()", "function" ],
        [ "translate()", "function" ],
        [ "triangle_strip()", "function" ],
        [ "unload_image()", "function" ],
        [ "use_shader()", "function" ]
    ],
    "sched": [
        [ "scheduler", "class" ]
    ],
    "select": [
        [ "epoll()", "function" ],
        [ "error", "exception" ],
        [ "kevent()", "function" ],
        [ "kqueue()", "function" ],
        [ "poll()", "function" ],
        [ "select()", "function" ]
    ],
    "set": [
        [ "add", "method" ],
        [ "clear", "method" ],
        [ "copy", "method" ],
        [ "difference", "method" ],
        [ "difference_update", "method" ],
        [ "discard", "method" ],
        [ "intersection", "method" ],
        [ "intersection_update", "method" ],
        [ "isdisjoint", "method" ],
        [ "issubset", "method" ],
        [ "issuperset", "method" ],
        [ "pop", "method" ],
        [ "remove", "method" ],
        [ "symmetric_difference", "method" ],
        [ "symmetric_difference_update", "method" ],
        [ "union", "method" ],
        [ "update", "method" ]
    ],
    "sets": [
        [ "ImmutableSet", "class" ],
        [ "Set", "class" ]
    ],
    "sgmllib": [
        [ "SGMLParseError", "exception" ],
        [ "SGMLParser", "class" ]
    ],
    "sha": [
        [ "blocksize", "data" ],
        [ "digest_size", "data" ],
        [ "new()", "function" ]
    ],
    "shelve": [
        [ "BsdDbShelf", "class" ],
        [ "DbfilenameShelf", "class" ],
        [ "Shelf", "class" ],
        [ "open()", "function" ]
    ],
    "shlex": [
        [ "shlex", "class" ],
        [ "split()", "function" ]
    ],
    "shutil": [
        [ "Error", "exception" ],
        [ "copy()", "function" ],
        [ "copy2()", "function" ],
        [ "copyfile()", "function" ],
        [ "copyfileobj()", "function" ],
        [ "copymode()", "function" ],
        [ "copystat()", "function" ],
        [ "copytree()", "function" ],
        [ "get_archive_formats()", "function" ],
        [ "ignore_patterns()", "function" ],
        [ "make_archive()", "function" ],
        [ "move()", "function" ],
        [ "register_archive_format()", "function" ],
        [ "rmtree()", "function" ],
        [ "unregister_archive_format()", "function" ]
    ],
    "signal": [
        [ "CTRL_BREAK_EVENT", "data" ],
        [ "CTRL_C_EVENT", "data" ],
        [ "ITIMER_PROF", "data" ],
        [ "ITIMER_REAL", "data" ],
        [ "ITIMER_VIRTUAL", "data" ],
        [ "ItimerError", "exception" ],
        [ "NSIG", "data" ],
        [ "SIG_DFL", "data" ],
        [ "SIG_IGN", "data" ],
        [ "alarm()", "function" ],
        [ "getitimer()", "function" ],
        [ "getsignal()", "function" ],
        [ "pause()", "function" ],
        [ "set_wakeup_fd()", "function" ],
        [ "setitimer()", "function" ],
        [ "siginterrupt()", "function" ],
        [ "signal()", "function" ]
    ],
    "slice": [
        [ "indices", "method" ]
    ],
    "smtpd": [
        [ "DebuggingServer", "class" ],
        [ "MailmanProxy", "class" ],
        [ "PureProxy", "class" ],
        [ "SMTPServer", "class" ]
    ],
    "smtplib": [
        [ "LMTP", "class" ],
        [ "SMTP", "class" ],
        [ "SMTPAuthenticationError", "exception" ],
        [ "SMTPConnectError", "exception" ],
        [ "SMTPDataError", "exception" ],
        [ "SMTPException", "exception" ],
        [ "SMTPHeloError", "exception" ],
        [ "SMTPRecipientsRefused", "exception" ],
        [ "SMTPResponseException", "exception" ],
        [ "SMTPSenderRefused", "exception" ],
        [ "SMTPServerDisconnected", "exception" ],
        [ "SMTP_SSL", "class" ]
    ],
    "sndhdr": [
        [ "what()", "function" ],
        [ "whathdr()", "function" ]
    ],
    "socket": [
        [ "AF_INET", "data" ],
        [ "AF_INET6", "data" ],
        [ "AF_UNIX", "data" ],
        [ "SOCK_DGRAM", "data" ],
        [ "SOCK_RAW", "data" ],
        [ "SOCK_RDM", "data" ],
        [ "SOCK_SEQPACKET", "data" ],
        [ "SOCK_STREAM", "data" ],
        [ "SOMAXCONN", "data" ],
        [ "SocketType", "data" ],
        [ "create_connection()", "function" ],
        [ "error", "exception" ],
        [ "fromfd()", "function" ],
        [ "gaierror", "exception" ],
        [ "getaddrinfo()", "function" ],
        [ "getdefaulttimeout()", "function" ],
        [ "getfqdn()", "function" ],
        [ "gethostbyaddr()", "function" ],
        [ "gethostbyname()", "function" ],
        [ "gethostbyname_ex()", "function" ],
        [ "gethostname()", "function" ],
        [ "getnameinfo()", "function" ],
        [ "getprotobyname()", "function" ],
        [ "getservbyname()", "function" ],
        [ "getservbyport()", "function" ],
        [ "has_ipv6", "data" ],
        [ "herror", "exception" ],
        [ "htonl()", "function" ],
        [ "htons()", "function" ],
        [ "inet_aton()", "function" ],
        [ "inet_ntoa()", "function" ],
        [ "inet_ntop()", "function" ],
        [ "inet_pton()", "function" ],
        [ "ntohl()", "function" ],
        [ "ntohs()", "function" ],
        [ "setdefaulttimeout()", "function" ],
        [ "socket()", "function" ],
        [ "socketpair()", "function" ],
        [ "timeout", "exception" ]
    ],
    "sound": [
        [ "MIDIPlayer", "class" ],
        [ "Player", "class" ],
        [ "play_effect()", "function" ],
        [ "set_honors_silent_switch()", "function" ],
        [ "set_volume()", "function" ],
        [ "stop_effect()", "function" ]
    ],
    "speech": [
        [ "get_languages()", "function" ],
        [ "is_speaking()", "function" ],
        [ "say()", "function" ],
        [ "stop()", "function" ]
    ],
    "sqlite3": [
        [ "Connection", "class" ],
        [ "Cursor", "class" ],
        [ "PARSE_COLNAMES", "data" ],
        [ "PARSE_DECLTYPES", "data" ],
        [ "Row", "class" ],
        [ "complete_statement()", "function" ],
        [ "connect()", "function" ],
        [ "enable_callback_tracebacks()", "function" ],
        [ "register_adapter()", "function" ],
        [ "register_converter()", "function" ],
        [ "sqlite_version", "data" ],
        [ "sqlite_version_info", "data" ],
        [ "version", "data" ],
        [ "version_info", "data" ]
    ],
    "ssl": [
        [ "CERT_NONE", "data" ],
        [ "CERT_OPTIONAL", "data" ],
        [ "CERT_REQUIRED", "data" ],
        [ "DER_cert_to_PEM_cert()", "function" ],
        [ "OPENSSL_VERSION", "data" ],
        [ "OPENSSL_VERSION_INFO", "data" ],
        [ "OPENSSL_VERSION_NUMBER", "data" ],
        [ "PEM_cert_to_DER_cert()", "function" ],
        [ "PROTOCOL_SSLv2", "data" ],
        [ "PROTOCOL_SSLv23", "data" ],
        [ "PROTOCOL_SSLv3", "data" ],
        [ "PROTOCOL_TLSv1", "data" ],
        [ "RAND_add()", "function" ],
        [ "RAND_egd()", "function" ],
        [ "RAND_status()", "function" ],
        [ "SSLError", "exception" ],
        [ "cert_time_to_seconds()", "function" ],
        [ "get_server_certificate()", "function" ],
        [ "wrap_socket()", "function" ]
    ],
    "stat": [
        [ "SF_APPEND", "data" ],
        [ "SF_ARCHIVED", "data" ],
        [ "SF_IMMUTABLE", "data" ],
        [ "SF_NOUNLINK", "data" ],
        [ "SF_SNAPSHOT", "data" ],
        [ "ST_ATIME", "data" ],
        [ "ST_CTIME", "data" ],
        [ "ST_DEV", "data" ],
        [ "ST_GID", "data" ],
        [ "ST_INO", "data" ],
        [ "ST_MODE", "data" ],
        [ "ST_MTIME", "data" ],
        [ "ST_NLINK", "data" ],
        [ "ST_SIZE", "data" ],
        [ "ST_UID", "data" ],
        [ "S_ENFMT", "data" ],
        [ "S_IEXEC", "data" ],
        [ "S_IFBLK", "data" ],
        [ "S_IFCHR", "data" ],
        [ "S_IFDIR", "data" ],
        [ "S_IFIFO", "data" ],
        [ "S_IFLNK", "data" ],
        [ "S_IFMT()", "function" ],
        [ "S_IFREG", "data" ],
        [ "S_IFSOCK", "data" ],
        [ "S_IMODE()", "function" ],
        [ "S_IREAD", "data" ],
        [ "S_IRGRP", "data" ],
        [ "S_IROTH", "data" ],
        [ "S_IRUSR", "data" ],
        [ "S_IRWXG", "data" ],
        [ "S_IRWXO", "data" ],
        [ "S_IRWXU", "data" ],
        [ "S_ISBLK()", "function" ],
        [ "S_ISCHR()", "function" ],
        [ "S_ISDIR()", "function" ],
        [ "S_ISFIFO()", "function" ],
        [ "S_ISGID", "data" ],
        [ "S_ISLNK()", "function" ],
        [ "S_ISREG()", "function" ],
        [ "S_ISSOCK()", "function" ],
        [ "S_ISUID", "data" ],
        [ "S_ISVTX", "data" ],
        [ "S_IWGRP", "data" ],
        [ "S_IWOTH", "data" ],
        [ "S_IWRITE", "data" ],
        [ "S_IWUSR", "data" ],
        [ "S_IXGRP", "data" ],
        [ "S_IXOTH", "data" ],
        [ "S_IXUSR", "data" ],
        [ "UF_APPEND", "data" ],
        [ "UF_COMPRESSED", "data" ],
        [ "UF_HIDDEN", "data" ],
        [ "UF_IMMUTABLE", "data" ],
        [ "UF_NODUMP", "data" ],
        [ "UF_NOUNLINK", "data" ],
        [ "UF_OPAQUE", "data" ]
    ],
    "statvfs": [
        [ "F_BAVAIL", "data" ],
        [ "F_BFREE", "data" ],
        [ "F_BLOCKS", "data" ],
        [ "F_BSIZE", "data" ],
        [ "F_FAVAIL", "data" ],
        [ "F_FFREE", "data" ],
        [ "F_FILES", "data" ],
        [ "F_FLAG", "data" ],
        [ "F_FRSIZE", "data" ],
        [ "F_NAMEMAX", "data" ]
    ],
    "stpl": [
        [ "defined()", "function" ],
        [ "get()", "function" ],
        [ "include()", "function" ],
        [ "rebase()", "function" ],
        [ "setdefault()", "function" ]
    ],
    "str": [
        [ "capitalize", "method" ],
        [ "center", "method" ],
        [ "count", "method" ],
        [ "decode", "method" ],
        [ "encode", "method" ],
        [ "endswith", "method" ],
        [ "expandtabs", "method" ],
        [ "find", "method" ],
        [ "format", "method" ],
        [ "index", "method" ],
        [ "isalnum", "method" ],
        [ "isalpha", "method" ],
        [ "isdigit", "method" ],
        [ "islower", "method" ],
        [ "isspace", "method" ],
        [ "istitle", "method" ],
        [ "isupper", "method" ],
        [ "join", "method" ],
        [ "ljust", "method" ],
        [ "lower", "method" ],
        [ "lstrip", "method" ],
        [ "partition", "method" ],
        [ "replace", "method" ],
        [ "rfind", "method" ],
        [ "rindex", "method" ],
        [ "rjust", "method" ],
        [ "rpartition", "method" ],
        [ "rsplit", "method" ],
        [ "rstrip", "method" ],
        [ "split", "method" ],
        [ "splitlines", "method" ],
        [ "startswith", "method" ],
        [ "strip", "method" ],
        [ "swapcase", "method" ],
        [ "title", "method" ],
        [ "translate", "method" ],
        [ "upper", "method" ],
        [ "zfill", "method" ]
    ],
    "string": [
        [ "Formatter", "class" ],
        [ "Template", "class" ],
        [ "ascii_letters", "data" ],
        [ "ascii_lowercase", "data" ],
        [ "ascii_uppercase", "data" ],
        [ "atof()", "function" ],
        [ "atoi()", "function" ],
        [ "atol()", "function" ],
        [ "capitalize()", "function" ],
        [ "capwords()", "function" ],
        [ "center()", "function" ],
        [ "count()", "function" ],
        [ "digits", "data" ],
        [ "expandtabs()", "function" ],
        [ "find()", "function" ],
        [ "hexdigits", "data" ],
        [ "index()", "function" ],
        [ "join()", "function" ],
        [ "joinfields()", "function" ],
        [ "letters", "data" ],
        [ "ljust()", "function" ],
        [ "lower()", "function" ],
        [ "lowercase", "data" ],
        [ "lstrip()", "function" ],
        [ "maketrans()", "function" ],
        [ "octdigits", "data" ],
        [ "printable", "data" ],
        [ "punctuation", "data" ],
        [ "replace()", "function" ],
        [ "rfind()", "function" ],
        [ "rindex()", "function" ],
        [ "rjust()", "function" ],
        [ "rsplit()", "function" ],
        [ "rstrip()", "function" ],
        [ "split()", "function" ],
        [ "splitfields()", "function" ],
        [ "strip()", "function" ],
        [ "swapcase()", "function" ],
        [ "translate()", "function" ],
        [ "upper()", "function" ],
        [ "uppercase", "data" ],
        [ "whitespace", "data" ],
        [ "zfill()", "function" ]
    ],
    "stringprep": [
        [ "in_table_a1()", "function" ],
        [ "in_table_b1()", "function" ],
        [ "in_table_c11()", "function" ],
        [ "in_table_c11_c12()", "function" ],
        [ "in_table_c12()", "function" ],
        [ "in_table_c21()", "function" ],
        [ "in_table_c21_c22()", "function" ],
        [ "in_table_c22()", "function" ],
        [ "in_table_c3()", "function" ],
        [ "in_table_c4()", "function" ],
        [ "in_table_c5()", "function" ],
        [ "in_table_c6()", "function" ],
        [ "in_table_c7()", "function" ],
        [ "in_table_c8()", "function" ],
        [ "in_table_c9()", "function" ],
        [ "in_table_d1()", "function" ],
        [ "in_table_d2()", "function" ],
        [ "map_table_b2()", "function" ],
        [ "map_table_b3()", "function" ]
    ],
    "struct": [
        [ "Struct", "class" ],
        [ "calcsize()", "function" ],
        [ "error", "exception" ],
        [ "pack()", "function" ],
        [ "pack_into()", "function" ],
        [ "unpack()", "function" ],
        [ "unpack_from()", "function" ]
    ],
    "subprocess": [
        [ "CREATE_NEW_CONSOLE", "data" ],
        [ "CREATE_NEW_PROCESS_GROUP", "data" ],
        [ "CalledProcessError", "exception" ],
        [ "PIPE", "data" ],
        [ "Popen", "class" ],
        [ "STARTF_USESHOWWINDOW", "data" ],
        [ "STARTF_USESTDHANDLES", "data" ],
        [ "STARTUPINFO", "class" ],
        [ "STDOUT", "data" ],
        [ "STD_ERROR_HANDLE", "data" ],
        [ "STD_INPUT_HANDLE", "data" ],
        [ "STD_OUTPUT_HANDLE", "data" ],
        [ "SW_HIDE", "data" ],
        [ "call()", "function" ],
        [ "check_call()", "function" ],
        [ "check_output()", "function" ]
    ],
    "sunau": [
        [ "AUDIO_FILE_ENCODING_ADPCM_G721", "data" ],
        [ "AUDIO_FILE_ENCODING_ADPCM_G722", "data" ],
        [ "AUDIO_FILE_ENCODING_ADPCM_G723_3", "data" ],
        [ "AUDIO_FILE_ENCODING_ADPCM_G723_5", "data" ],
        [ "AUDIO_FILE_ENCODING_ALAW_8", "data" ],
        [ "AUDIO_FILE_ENCODING_DOUBLE", "data" ],
        [ "AUDIO_FILE_ENCODING_FLOAT", "data" ],
        [ "AUDIO_FILE_ENCODING_LINEAR_16", "data" ],
        [ "AUDIO_FILE_ENCODING_LINEAR_24", "data" ],
        [ "AUDIO_FILE_ENCODING_LINEAR_32", "data" ],
        [ "AUDIO_FILE_ENCODING_LINEAR_8", "data" ],
        [ "AUDIO_FILE_ENCODING_MULAW_8", "data" ],
        [ "AUDIO_FILE_MAGIC", "data" ],
        [ "Error", "exception" ],
        [ "open()", "function" ],
        [ "openfp()", "function" ]
    ],
    "symbol": [
        [ "sym_name", "data" ]
    ],
    "sympy": [
        [ "assumptions", "mod" ],
        [ "categories", "mod" ],
        [ "diffgeom", "mod" ],
        [ "functions", "mod" ],
        [ "galgebra", "mod" ],
        [ "geometry", "mod" ],
        [ "integrals", "mod" ],
        [ "logic", "mod" ],
        [ "matrices", "mod" ],
        [ "physics", "mod" ],
        [ "series", "mod" ],
        [ "solvers", "mod" ],
        [ "statistics", "mod" ],
        [ "stats", "mod" ],
        [ "tensor", "mod" ],
        [ "utilities", "mod" ]
    ],
    "symtable": [
        [ "Class", "class" ],
        [ "Function", "class" ],
        [ "Symbol", "class" ],
        [ "SymbolTable", "class" ],
        [ "symtable()", "function" ]
    ],
    "sys": [
        [ "__displayhook__", "data" ],
        [ "__excepthook__", "data" ],
        [ "__stderr__", "data" ],
        [ "__stdin__", "data" ],
        [ "__stdout__", "data" ],
        [ "_clear_type_cache()", "function" ],
        [ "_current_frames()", "function" ],
        [ "_getframe()", "function" ],
        [ "api_version", "data" ],
        [ "argv", "data" ],
        [ "builtin_module_names", "data" ],
        [ "byteorder", "data" ],
        [ "call_tracing()", "function" ],
        [ "copyright", "data" ],
        [ "displayhook()", "function" ],
        [ "dllhandle", "data" ],
        [ "dont_write_bytecode", "data" ],
        [ "exc_clear()", "function" ],
        [ "exc_info()", "function" ],
        [ "exc_traceback", "data" ],
        [ "exc_type", "data" ],
        [ "exc_value", "data" ],
        [ "excepthook()", "function" ],
        [ "exec_prefix", "data" ],
        [ "executable", "data" ],
        [ "exit()", "function" ],
        [ "exitfunc", "data" ],
        [ "flags", "data" ],
        [ "float_info", "data" ],
        [ "float_repr_style", "data" ],
        [ "getcheckinterval()", "function" ],
        [ "getdefaultencoding()", "function" ],
        [ "getdlopenflags()", "function" ],
        [ "getfilesystemencoding()", "function" ],
        [ "getprofile()", "function" ],
        [ "getrecursionlimit()", "function" ],
        [ "getrefcount()", "function" ],
        [ "getsizeof()", "function" ],
        [ "gettrace()", "function" ],
        [ "getwindowsversion()", "function" ],
        [ "hexversion", "data" ],
        [ "last_traceback", "data" ],
        [ "last_type", "data" ],
        [ "last_value", "data" ],
        [ "long_info", "data" ],
        [ "maxint", "data" ],
        [ "maxsize", "data" ],
        [ "maxunicode", "data" ],
        [ "meta_path", "data" ],
        [ "modules", "data" ],
        [ "path", "data" ],
        [ "path_hooks", "data" ],
        [ "path_importer_cache", "data" ],
        [ "platform", "data" ],
        [ "prefix", "data" ],
        [ "ps1", "data" ],
        [ "ps2", "data" ],
        [ "py3kwarning", "data" ],
        [ "setcheckinterval()", "function" ],
        [ "setdefaultencoding()", "function" ],
        [ "setdlopenflags()", "function" ],
        [ "setprofile()", "function" ],
        [ "setrecursionlimit()", "function" ],
        [ "settrace()", "function" ],
        [ "settscdump()", "function" ],
        [ "stderr", "data" ],
        [ "stdin", "data" ],
        [ "stdout", "data" ],
        [ "subversion", "data" ],
        [ "tracebacklimit", "data" ],
        [ "version", "data" ],
        [ "version_info", "data" ],
        [ "warnoptions", "data" ],
        [ "winver", "data" ]
    ],
    "sysconfig": [
        [ "get_config_h_filename()", "function" ],
        [ "get_config_var()", "function" ],
        [ "get_config_vars()", "function" ],
        [ "get_path()", "function" ],
        [ "get_path_names()", "function" ],
        [ "get_paths()", "function" ],
        [ "get_platform()", "function" ],
        [ "get_python_version()", "function" ],
        [ "get_scheme_names()", "function" ],
        [ "is_python_build()", "function" ],
        [ "parse_config_h()", "function" ]
    ],
    "tabnanny": [
        [ "NannyNag", "exception" ],
        [ "check()", "function" ],
        [ "filename_only", "data" ],
        [ "tokeneater()", "function" ],
        [ "verbose", "data" ]
    ],
    "tarfile": [
        [ "CompressionError", "exception" ],
        [ "DEFAULT_FORMAT", "data" ],
        [ "ENCODING", "data" ],
        [ "ExtractError", "exception" ],
        [ "GNU_FORMAT", "data" ],
        [ "HeaderError", "exception" ],
        [ "PAX_FORMAT", "data" ],
        [ "ReadError", "exception" ],
        [ "StreamError", "exception" ],
        [ "TarError", "exception" ],
        [ "TarFile", "class" ],
        [ "TarFileCompat", "class" ],
        [ "TarInfo", "class" ],
        [ "USTAR_FORMAT", "data" ],
        [ "is_tarfile()", "function" ],
        [ "open()", "function" ]
    ],
    "telnetlib": [
        [ "Telnet", "class" ]
    ],
    "tempfile": [
        [ "NamedTemporaryFile()", "function" ],
        [ "SpooledTemporaryFile()", "function" ],
        [ "TemporaryFile()", "function" ],
        [ "gettempdir()", "function" ],
        [ "gettempprefix()", "function" ],
        [ "mkdtemp()", "function" ],
        [ "mkstemp()", "function" ],
        [ "mktemp()", "function" ],
        [ "tempdir", "data" ],
        [ "template", "data" ]
    ],
    "test": [
        [ "test_support", "mod" ]
    ],
    "textwrap": [
        [ "TextWrapper", "class" ],
        [ "dedent()", "function" ],
        [ "fill()", "function" ],
        [ "wrap()", "function" ]
    ],
    "thread": [
        [ "LockType", "data" ],
        [ "allocate_lock()", "function" ],
        [ "error", "exception" ],
        [ "exit()", "function" ],
        [ "get_ident()", "function" ],
        [ "interrupt_main()", "function" ],
        [ "stack_size()", "function" ],
        [ "start_new_thread()", "function" ]
    ],
    "threading": [
        [ "BoundedSemaphore()", "function" ],
        [ "Condition", "class" ],
        [ "Event", "class" ],
        [ "Lock()", "function" ],
        [ "RLock()", "function" ],
        [ "Semaphore", "class" ],
        [ "Thread", "class" ],
        [ "Timer", "class" ],
        [ "activeCount()", "function" ],
        [ "active_count()", "function" ],
        [ "currentThread()", "function" ],
        [ "current_thread()", "function" ],
        [ "enumerate()", "function" ],
        [ "local", "class" ],
        [ "setprofile()", "function" ],
        [ "settrace()", "function" ],
        [ "stack_size()", "function" ]
    ],
    "time": [
        [ "accept2dyear", "data" ],
        [ "altzone", "data" ],
        [ "asctime()", "function" ],
        [ "clock()", "function" ],
        [ "ctime()", "function" ],
        [ "daylight", "data" ],
        [ "gmtime()", "function" ],
        [ "localtime()", "function" ],
        [ "mktime()", "function" ],
        [ "sleep()", "function" ],
        [ "strftime()", "function" ],
        [ "strptime()", "function" ],
        [ "struct_time", "class" ],
        [ "time()", "function" ],
        [ "timezone", "data" ],
        [ "tzname", "data" ],
        [ "tzset()", "function" ]
    ],
    "timeit": [
        [ "Timer", "class" ],
        [ "default_timer()", "function" ],
        [ "repeat()", "function" ],
        [ "timeit()", "function" ]
    ],
    "token": [
        [ "AMPER", "data" ],
        [ "AMPEREQUAL", "data" ],
        [ "AT", "data" ],
        [ "BACKQUOTE", "data" ],
        [ "CIRCUMFLEX", "data" ],
        [ "CIRCUMFLEXEQUAL", "data" ],
        [ "COLON", "data" ],
        [ "COMMA", "data" ],
        [ "DEDENT", "data" ],
        [ "DOT", "data" ],
        [ "DOUBLESLASH", "data" ],
        [ "DOUBLESLASHEQUAL", "data" ],
        [ "DOUBLESTAR", "data" ],
        [ "DOUBLESTAREQUAL", "data" ],
        [ "ENDMARKER", "data" ],
        [ "EQEQUAL", "data" ],
        [ "EQUAL", "data" ],
        [ "ERRORTOKEN", "data" ],
        [ "GREATER", "data" ],
        [ "GREATEREQUAL", "data" ],
        [ "INDENT", "data" ],
        [ "ISEOF()", "function" ],
        [ "ISNONTERMINAL()", "function" ],
        [ "ISTERMINAL()", "function" ],
        [ "LBRACE", "data" ],
        [ "LEFTSHIFT", "data" ],
        [ "LEFTSHIFTEQUAL", "data" ],
        [ "LESS", "data" ],
        [ "LESSEQUAL", "data" ],
        [ "LPAR", "data" ],
        [ "LSQB", "data" ],
        [ "MINEQUAL", "data" ],
        [ "MINUS", "data" ],
        [ "NAME", "data" ],
        [ "NEWLINE", "data" ],
        [ "NOTEQUAL", "data" ],
        [ "NT_OFFSET", "data" ],
        [ "NUMBER", "data" ],
        [ "N_TOKENS", "data" ],
        [ "OP", "data" ],
        [ "PERCENT", "data" ],
        [ "PERCENTEQUAL", "data" ],
        [ "PLUS", "data" ],
        [ "PLUSEQUAL", "data" ],
        [ "RBRACE", "data" ],
        [ "RIGHTSHIFT", "data" ],
        [ "RIGHTSHIFTEQUAL", "data" ],
        [ "RPAR", "data" ],
        [ "RSQB", "data" ],
        [ "SEMI", "data" ],
        [ "SLASH", "data" ],
        [ "SLASHEQUAL", "data" ],
        [ "STAR", "data" ],
        [ "STAREQUAL", "data" ],
        [ "STRING", "data" ],
        [ "TILDE", "data" ],
        [ "VBAR", "data" ],
        [ "VBAREQUAL", "data" ],
        [ "tok_name", "data" ]
    ],
    "tokenize": [
        [ "COMMENT", "data" ],
        [ "NL", "data" ],
        [ "generate_tokens()", "function" ],
        [ "tokenize()", "function" ],
        [ "untokenize()", "function" ]
    ],
    "trace": [
        [ "CoverageResults", "class" ],
        [ "Trace", "class" ]
    ],
    "traceback": [
        [ "extract_stack()", "function" ],
        [ "extract_tb()", "function" ],
        [ "format_exc()", "function" ],
        [ "format_exception()", "function" ],
        [ "format_exception_only()", "function" ],
        [ "format_list()", "function" ],
        [ "format_stack()", "function" ],
        [ "format_tb()", "function" ],
        [ "print_exc()", "function" ],
        [ "print_exception()", "function" ],
        [ "print_last()", "function" ],
        [ "print_stack()", "function" ],
        [ "print_tb()", "function" ],
        [ "tb_lineno()", "function" ]
    ],
    "twitter": [
        [ "get_account()", "function" ],
        [ "get_all_accounts()", "function" ],
        [ "get_favorites()", "function" ],
        [ "get_home_timeline()", "function" ],
        [ "get_mentions_timeline()", "function" ],
        [ "get_request_headers()", "function" ],
        [ "post_tweet()", "function" ],
        [ "request()", "function" ],
        [ "search()", "function" ]
    ],
    "types": [
        [ "BooleanType", "data" ],
        [ "BufferType", "data" ],
        [ "BuiltinFunctionType", "data" ],
        [ "BuiltinMethodType", "data" ],
        [ "ClassType", "data" ],
        [ "CodeType", "data" ],
        [ "ComplexType", "data" ],
        [ "DictProxyType", "data" ],
        [ "DictType", "data" ],
        [ "DictionaryType", "data" ],
        [ "EllipsisType", "data" ],
        [ "FileType", "data" ],
        [ "FloatType", "data" ],
        [ "FrameType", "data" ],
        [ "FunctionType", "data" ],
        [ "GeneratorType", "data" ],
        [ "GetSetDescriptorType", "data" ],
        [ "InstanceType", "data" ],
        [ "IntType", "data" ],
        [ "LambdaType", "data" ],
        [ "ListType", "data" ],
        [ "LongType", "data" ],
        [ "MemberDescriptorType", "data" ],
        [ "MethodType", "data" ],
        [ "ModuleType", "data" ],
        [ "NoneType", "data" ],
        [ "NotImplementedType", "data" ],
        [ "SliceType", "data" ],
        [ "StringType", "data" ],
        [ "StringTypes", "data" ],
        [ "TracebackType", "data" ],
        [ "TupleType", "data" ],
        [ "TypeType", "data" ],
        [ "UnboundMethodType", "data" ],
        [ "UnicodeType", "data" ],
        [ "XRangeType", "data" ]
    ],
    "ui": [
        [ "ACTIVITY_INDICATOR_STYLE_GRAY", "data" ],
        [ "ACTIVITY_INDICATOR_STYLE_WHITE", "data" ],
        [ "ACTIVITY_INDICATOR_STYLE_WHITE_LARGE", "data" ],
        [ "ALIGN_CENTER", "data" ],
        [ "ALIGN_JUSTIFIED", "data" ],
        [ "ALIGN_LEFT", "data" ],
        [ "ALIGN_NATURAL", "data" ],
        [ "ALIGN_RIGHT", "data" ],
        [ "AUTOCAPITALIZE_ALL", "data" ],
        [ "AUTOCAPITALIZE_NONE", "data" ],
        [ "AUTOCAPITALIZE_SENTENCES", "data" ],
        [ "AUTOCAPITALIZE_WORDS", "data" ],
        [ "BLEND_CLEAR", "data" ],
        [ "BLEND_COLOR", "data" ],
        [ "BLEND_COLOR_BURN", "data" ],
        [ "BLEND_COLOR_DODGE", "data" ],
        [ "BLEND_COPY", "data" ],
        [ "BLEND_DARKEN", "data" ],
        [ "BLEND_DESTINATION_ATOP", "data" ],
        [ "BLEND_DESTINATION_IN", "data" ],
        [ "BLEND_DESTINATION_OUT", "data" ],
        [ "BLEND_DESTINATION_OVER", "data" ],
        [ "BLEND_DIFFERENCE", "data" ],
        [ "BLEND_EXCLUSION", "data" ],
        [ "BLEND_HARD_LIGHT", "data" ],
        [ "BLEND_HUE", "data" ],
        [ "BLEND_LIGHTEN", "data" ],
        [ "BLEND_LUMINOSITY", "data" ],
        [ "BLEND_MULTIPLY", "data" ],
        [ "BLEND_NORMAL", "data" ],
        [ "BLEND_OVERLAY", "data" ],
        [ "BLEND_PLUS_DARKER", "data" ],
        [ "BLEND_PLUS_LIGHTER", "data" ],
        [ "BLEND_SATURATION", "data" ],
        [ "BLEND_SCREEN", "data" ],
        [ "BLEND_SOFT_LIGHT", "data" ],
        [ "BLEND_SOURCE_ATOP", "data" ],
        [ "BLEND_SOURCE_IN", "data" ],
        [ "BLEND_SOURCE_OUT", "data" ],
        [ "BLEND_XOR", "data" ],
        [ "Button", "class" ],
        [ "ButtonItem", "class" ],
        [ "CONTENT_BOTTOM", "data" ],
        [ "CONTENT_BOTTOM_LEFT", "data" ],
        [ "CONTENT_BOTTOM_RIGHT", "data" ],
        [ "CONTENT_CENTER", "data" ],
        [ "CONTENT_LEFT", "data" ],
        [ "CONTENT_REDRAW", "data" ],
        [ "CONTENT_RIGHT", "data" ],
        [ "CONTENT_SCALE_ASPECT_FILL", "data" ],
        [ "CONTENT_SCALE_ASPECT_FIT", "data" ],
        [ "CONTENT_SCALE_TO_FILL", "data" ],
        [ "CONTENT_TOP", "data" ],
        [ "CONTENT_TOP_LEFT", "data" ],
        [ "CONTENT_TOP_RIGHT", "data" ],
        [ "DATE_PICKER_MODE_COUNTDOWN", "data" ],
        [ "DATE_PICKER_MODE_DATE", "data" ],
        [ "DATE_PICKER_MODE_DATE_AND_TIME", "data" ],
        [ "DATE_PICKER_MODE_TIME", "data" ],
        [ "DatePicker", "class" ],
        [ "GState", "class" ],
        [ "Image", "class" ],
        [ "ImageContext", "class" ],
        [ "ImageView", "class" ],
        [ "KEYBOARD_ASCII", "data" ],
        [ "KEYBOARD_DECIMAL_PAD", "data" ],
        [ "KEYBOARD_DEFAULT", "data" ],
        [ "KEYBOARD_EMAIL", "data" ],
        [ "KEYBOARD_NAME_PHONE_PAD", "data" ],
        [ "KEYBOARD_NUMBERS", "data" ],
        [ "KEYBOARD_NUMBER_PAD", "data" ],
        [ "KEYBOARD_PHONE_PAD", "data" ],
        [ "KEYBOARD_TWITTER", "data" ],
        [ "KEYBOARD_URL", "data" ],
        [ "KEYBOARD_WEB_SEARCH", "data" ],
        [ "LB_CHAR_WRAP", "data" ],
        [ "LB_CLIP", "data" ],
        [ "LB_TRUNCATE_HEAD", "data" ],
        [ "LB_TRUNCATE_MIDDLE", "data" ],
        [ "LB_TRUNCATE_TAIL", "data" ],
        [ "LB_WORD_WRAP", "data" ],
        [ "LINE_CAP_BUTT", "data" ],
        [ "LINE_CAP_ROUND", "data" ],
        [ "LINE_CAP_SQUARE", "data" ],
        [ "LINE_JOIN_BEVEL", "data" ],
        [ "LINE_JOIN_MITER", "data" ],
        [ "LINE_JOIN_ROUND", "data" ],
        [ "Label", "class" ],
        [ "ListDataSource", "class" ],
        [ "NavigationView", "class" ],
        [ "Path", "class" ],
        [ "RENDERING_MODE_AUTOMATIC", "data" ],
        [ "RENDERING_MODE_ORIGINAL", "data" ],
        [ "RENDERING_MODE_TEMPLATE", "data" ],
        [ "ScrollView", "class" ],
        [ "SegmentedControl", "class" ],
        [ "Slider", "class" ],
        [ "Switch", "class" ],
        [ "TableView", "class" ],
        [ "TableViewCell", "class" ],
        [ "TextField", "class" ],
        [ "TextView", "class" ],
        [ "Touch", "class" ],
        [ "Transform", "class" ],
        [ "View", "class" ],
        [ "WebView", "class" ],
        [ "animate()", "function" ],
        [ "cancel_delays()", "function" ],
        [ "concat_ctm()", "function" ],
        [ "convert_point()", "function" ],
        [ "convert_rect()", "function" ],
        [ "delay()", "function" ],
        [ "draw_string()", "function" ],
        [ "fill_rect()", "function" ],
        [ "get_screen_size()", "function" ],
        [ "get_window_size()", "function" ],
        [ "in_background()", "function" ],
        [ "load_view()", "function" ],
        [ "measure_string()", "function" ],
        [ "parse_color()", "function" ],
        [ "set_blend_mode()", "function" ],
        [ "set_color()", "function" ],
        [ "set_shadow()", "function" ]
    ],
    "unicode": [
        [ "isdecimal", "method" ],
        [ "isnumeric", "method" ]
    ],
    "unicodedata": [
        [ "bidirectional()", "function" ],
        [ "category()", "function" ],
        [ "combining()", "function" ],
        [ "decimal()", "function" ],
        [ "decomposition()", "function" ],
        [ "digit()", "function" ],
        [ "east_asian_width()", "function" ],
        [ "lookup()", "function" ],
        [ "mirrored()", "function" ],
        [ "name()", "function" ],
        [ "normalize()", "function" ],
        [ "numeric()", "function" ],
        [ "ucd_3_2_0", "data" ],
        [ "unidata_version", "data" ]
    ],
    "unittest": [
        [ "FunctionTestCase", "class" ],
        [ "TestCase", "class" ],
        [ "TestLoader", "class" ],
        [ "TestResult", "class" ],
        [ "TestSuite", "class" ],
        [ "TextTestResult", "class" ],
        [ "TextTestRunner", "class" ],
        [ "defaultTestLoader", "data" ],
        [ "expectedFailure()", "function" ],
        [ "installHandler()", "function" ],
        [ "main()", "function" ],
        [ "registerResult()", "function" ],
        [ "removeHandler()", "function" ],
        [ "removeResult()", "function" ],
        [ "skip()", "function" ],
        [ "skipIf()", "function" ],
        [ "skipUnless()", "function" ]
    ],
    "urllib": [
        [ "ContentTooShortError", "exception" ],
        [ "FancyURLopener", "class" ],
        [ "URLopener", "class" ],
        [ "_urlopener", "data" ],
        [ "getproxies()", "function" ],
        [ "pathname2url()", "function" ],
        [ "quote()", "function" ],
        [ "quote_plus()", "function" ],
        [ "unquote()", "function" ],
        [ "unquote_plus()", "function" ],
        [ "url2pathname()", "function" ],
        [ "urlcleanup()", "function" ],
        [ "urlencode()", "function" ],
        [ "urlopen()", "function" ],
        [ "urlretrieve()", "function" ]
    ],
    "urllib2": [
        [ "AbstractBasicAuthHandler", "class" ],
        [ "AbstractDigestAuthHandler", "class" ],
        [ "BaseHandler", "class" ],
        [ "CacheFTPHandler", "class" ],
        [ "FTPHandler", "class" ],
        [ "FileHandler", "class" ],
        [ "HTTPBasicAuthHandler", "class" ],
        [ "HTTPCookieProcessor", "class" ],
        [ "HTTPDefaultErrorHandler", "class" ],
        [ "HTTPDigestAuthHandler", "class" ],
        [ "HTTPError", "exception" ],
        [ "HTTPErrorProcessor", "class" ],
        [ "HTTPHandler", "class" ],
        [ "HTTPPasswordMgr", "class" ],
        [ "HTTPPasswordMgrWithDefaultRealm", "class" ],
        [ "HTTPRedirectHandler", "class" ],
        [ "HTTPSHandler", "class" ],
        [ "OpenerDirector", "class" ],
        [ "ProxyBasicAuthHandler", "class" ],
        [ "ProxyDigestAuthHandler", "class" ],
        [ "ProxyHandler", "class" ],
        [ "Request", "class" ],
        [ "URLError", "exception" ],
        [ "UnknownHandler", "class" ],
        [ "build_opener()", "function" ],
        [ "install_opener()", "function" ],
        [ "urlopen()", "function" ]
    ],
    "urlparse": [
        [ "BaseResult", "class" ],
        [ "ParseResult", "class" ],
        [ "SplitResult", "class" ],
        [ "parse_qs()", "function" ],
        [ "parse_qsl()", "function" ],
        [ "urldefrag()", "function" ],
        [ "urljoin()", "function" ],
        [ "urlparse()", "function" ],
        [ "urlsplit()", "function" ],
        [ "urlunparse()", "function" ],
        [ "urlunsplit()", "function" ]
    ],
    "uu": [
        [ "Error", "exception" ],
        [ "decode()", "function" ],
        [ "encode()", "function" ]
    ],
    "uuid": [
        [ "NAMESPACE_DNS", "data" ],
        [ "NAMESPACE_OID", "data" ],
        [ "NAMESPACE_URL", "data" ],
        [ "NAMESPACE_X500", "data" ],
        [ "RESERVED_FUTURE", "data" ],
        [ "RESERVED_MICROSOFT", "data" ],
        [ "RESERVED_NCS", "data" ],
        [ "RFC_4122", "data" ],
        [ "UUID", "class" ],
        [ "getnode()", "function" ],
        [ "uuid1()", "function" ],
        [ "uuid3()", "function" ],
        [ "uuid4()", "function" ],
        [ "uuid5()", "function" ]
    ],
    "warnings": [
        [ "catch_warnings", "class" ],
        [ "filterwarnings()", "function" ],
        [ "formatwarning()", "function" ],
        [ "resetwarnings()", "function" ],
        [ "showwarning()", "function" ],
        [ "simplefilter()", "function" ],
        [ "warn()", "function" ],
        [ "warn_explicit()", "function" ],
        [ "warnpy3k()", "function" ]
    ],
    "wave": [
        [ "Error", "exception" ],
        [ "open()", "function" ],
        [ "openfp()", "function" ]
    ],
    "weakref": [
        [ "CallableProxyType", "data" ],
        [ "ProxyType", "data" ],
        [ "ProxyTypes", "data" ],
        [ "ReferenceError", "exception" ],
        [ "ReferenceType", "data" ],
        [ "WeakKeyDictionary", "class" ],
        [ "WeakSet", "class" ],
        [ "WeakValueDictionary", "class" ],
        [ "getweakrefcount()", "function" ],
        [ "getweakrefs()", "function" ],
        [ "proxy()", "function" ],
        [ "ref", "class" ]
    ],
    "webbrowser": [
        [ "add_to_reading_list()", "function" ],
        [ "can_open()", "function" ],
        [ "open()", "function" ]
    ],
    "whichdb": [
        [ "whichdb()", "function" ]
    ],
    "wsgiref": [
        [ "handlers", "mod" ],
        [ "headers", "mod" ],
        [ "simple_server", "mod" ],
        [ "util", "mod" ],
        [ "validate", "mod" ]
    ],
    "xdrlib": [
        [ "ConversionError", "exception" ],
        [ "Error", "exception" ],
        [ "Packer", "class" ],
        [ "Unpacker", "class" ]
    ],
    "xml": [
        [ "dom", "mod" ],
        [ "sax", "mod" ]
    ],
    "xmlrpclib": [
        [ "MultiCall", "class" ],
        [ "ServerProxy", "class" ],
        [ "boolean()", "function" ],
        [ "dumps()", "function" ],
        [ "loads()", "function" ]
    ],
    "xmltodict": [
        [ "parse()", "function" ],
        [ "unparse()", "function" ]
    ],
    "zipfile": [
        [ "BadZipfile", "exception" ],
        [ "LargeZipFile", "exception" ],
        [ "PyZipFile", "class" ],
        [ "ZIP_DEFLATED", "data" ],
        [ "ZIP_STORED", "data" ],
        [ "ZipFile", "class" ],
        [ "ZipInfo", "class" ],
        [ "is_zipfile()", "function" ]
    ],
    "zipimport": [
        [ "ZipImportError", "exception" ],
        [ "zipimporter", "class" ]
    ],
    "zlib": [
        [ "adler32()", "function" ],
        [ "compress()", "function" ],
        [ "compressobj()", "function" ],
        [ "crc32()", "function" ],
        [ "decompress()", "function" ],
        [ "decompressobj()", "function" ],
        [ "error", "exception" ]
    ]
}
